{"ast":null,"code":"var _jsxFileName = \"/home/nypsus/mon-projet-deploiement/Front-end-indicateur/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport process from 'process';\nimport './App.css'; // Importation du fichier CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0xCd25eee89Bb01603f0E0cf8D8C243966a926761d';\nconst bscTestnetRpcUrl = \"https://bsc-dataseed.binance.org/\"; // BSC Mainnet\nconst bscTestnetProvider = new ethers.providers.JsonRpcProvider(bscTestnetRpcUrl);\nfunction App() {\n  _s();\n  const [web3Modal, setWeb3Modal] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [productInfo, setProductInfo] = useState(null);\n  const [productId, setProductId] = useState('');\n  const [productPrice, setProductPrice] = useState(null);\n  const [bnbToUsdRate, setBnbToUsdRate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n  const [convertedPrice, setConvertedPrice] = useState(null);\n\n  // Initialisation de Web3Modal pour la connexion aux portefeuilles\n  useEffect(() => {\n    const modal = new Web3Modal({\n      cacheProvider: true,\n      // Gardera en cache la dernière connexion\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          // Utilisation de WalletConnectProvider\n          options: {\n            infuraId: \"e759bc5af90042a1b66c5a01aae905af\" // Remplace avec ton propre infura ID\n          }\n        },\n        metamask: {\n          package: null // MetaMask ne nécessite pas de package\n        },\n        trustwallet: {\n          package: WalletConnectProvider,\n          // Utilisation de WalletConnectProvider pour Trust Wallet\n          options: {\n            infuraId: \"pDtEhrK4AAiPfirK7qsQI25NJlgrtMu1bBcFDqV4J95GTCAR2d/8Lg\" // Remplace avec ton propre infura ID\n          }\n        }\n\n        // Ajoute d'autres options de portefeuille ici si nécessaire (par exemple : Fortmatic, etc.)\n      }\n    });\n    setWeb3Modal(modal);\n\n    // Vérifie si la modale est présente dans le DOM\n    const interval = setInterval(() => {\n      const web3ModalElement = document.querySelector('.web3-modal-container');\n      if (web3ModalElement) {\n        web3ModalElement.style.zIndex = '999999'; // Modale au-dessus de tout\n        clearInterval(interval);\n      }\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Masquer l'iframe si elle est présente\n  const hideIframe = () => {\n    const iframe = document.querySelector('iframe');\n    if (iframe) {\n      iframe.style.display = 'none'; // ou iframe.remove() si tu préfères\n    }\n  };\n\n  // Appel de la fonction pour masquer l'iframe au moment où Web3Modal est chargé\n  hideIframe();\n\n  // Fonction pour reconnecter MetaMask\n  const reconnectToMetaMask = async () => {\n    if (typeof window.ethereum === \"undefined\") {\n      alert(\"MetaMask n'est pas installé !\");\n      return;\n    }\n    try {\n      await window.ethereum.request({\n        method: 'wallet_requestPermissions',\n        params: [{\n          eth_accounts: {}\n        }]\n      });\n      setTimeout(async () => {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setWalletAddress(address);\n        setWalletConnected(true);\n        alert(`Compte connecté : ${address}`);\n      }, 1000);\n    } catch (error) {\n      console.error('Erreur de connexion à MetaMask :', error);\n      alert('Échec de la connexion à MetaMask.');\n    }\n  };\n\n  // Connexion au wallet via Web3Modal\n  const connectWallet = async () => {\n    if (!web3Modal) {\n      console.error(\"Web3Modal non initialisé\");\n      return;\n    }\n    try {\n      console.log(\"Tentative de connexion au wallet...\");\n\n      // Connexion via Web3Modal\n      const instance = await web3Modal.connect();\n      const newProvider = new ethers.providers.Web3Provider(instance);\n\n      // S'assurer que le provider est correctement défini\n      if (!newProvider) {\n        console.error(\"Le fournisseur Web3 n'a pas été correctement créé\");\n        return;\n      }\n      setProvider(newProvider);\n\n      // Récupérer l'adresse du wallet\n      const signer = newProvider.getSigner();\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n      setWalletConnected(true);\n      console.log(`Wallet connecté: ${address}`);\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au portefeuille:\", error);\n      alert(\"Erreur de connexion au portefeuille. Veuillez connecter votre wallet.\");\n      // Ferme Web3Modal\n      web3Modal.clearCachedProvider();\n\n      // Relance le processus de reconnexion via MetaMask\n      try {\n        if (typeof window.ethereum !== \"undefined\") {\n          await reconnectToMetaMask();\n        } else {\n          alert(\"MetaMask n'est pas installé.\");\n        }\n      } catch (retryError) {\n        console.error(\"Échec de la reconnexion à MetaMask\", retryError);\n        alert(\"La reconnexion à MetaMask a échoué.\");\n      }\n    }\n  };\n\n  // Récupération du taux de conversion BNB vers USD\n  const fetchBnbToUsdRate = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd');\n      setBnbToUsdRate(response.data.binancecoin.usd);\n    } catch (error) {\n      console.error('Erreur lors de la récupération du taux BNB -> USD', error);\n    }\n  };\n\n  // Charger les données du contrat et les informations du produit\n  useEffect(() => {\n    const loadBlockchainData = async () => {\n      if (provider) {\n        const contractAddress = '0xD62B5CFdDfd26F6219E4BF366d9DB6B1450D5905';\n        const contractABI = [{\n          \"inputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"token\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"addAllowedToken\",\n          \"outputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"token\",\n            \"type\": \"address\"\n          }, {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }, {\n            \"internalType\": \"string\",\n            \"name\": \"productId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"pay\",\n          \"outputs\": [],\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"token\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"removeAllowedToken\",\n          \"outputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"address[]\",\n            \"name\": \"tokens\",\n            \"type\": \"address[]\"\n          }],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"constructor\"\n        }, {\n          \"anonymous\": false,\n          \"inputs\": [{\n            \"indexed\": true,\n            \"internalType\": \"address\",\n            \"name\": \"user\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }, {\n            \"indexed\": false,\n            \"internalType\": \"address\",\n            \"name\": \"token\",\n            \"type\": \"address\"\n          }, {\n            \"indexed\": false,\n            \"internalType\": \"string\",\n            \"name\": \"productId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"PaymentReceived\",\n          \"type\": \"event\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"string\",\n            \"name\": \"productId\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"removeProduct\",\n          \"outputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"string\",\n            \"name\": \"productId\",\n            \"type\": \"string\"\n          }, {\n            \"internalType\": \"uint256\",\n            \"name\": \"price\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"setProductPrice\",\n          \"outputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"withdraw\",\n          \"outputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"token\",\n            \"type\": \"address\"\n          }, {\n            \"internalType\": \"uint256\",\n            \"name\": \"amount\",\n            \"type\": \"uint256\"\n          }],\n          \"name\": \"withdrawToken\",\n          \"outputs\": [],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"allowedTokens\",\n          \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"token\",\n            \"type\": \"address\"\n          }],\n          \"name\": \"isTokenAllowed\",\n          \"outputs\": [{\n            \"internalType\": \"bool\",\n            \"name\": \"\",\n            \"type\": \"bool\"\n          }],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [],\n          \"name\": \"owner\",\n          \"outputs\": [{\n            \"internalType\": \"address\",\n            \"name\": \"\",\n            \"type\": \"address\"\n          }],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }, {\n          \"inputs\": [{\n            \"internalType\": \"string\",\n            \"name\": \"\",\n            \"type\": \"string\"\n          }],\n          \"name\": \"products\",\n          \"outputs\": [{\n            \"internalType\": \"uint256\",\n            \"name\": \"price\",\n            \"type\": \"uint256\"\n          }, {\n            \"internalType\": \"bool\",\n            \"name\": \"exists\",\n            \"type\": \"bool\"\n          }],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\"\n        }];\n        const contractInstance = new ethers.Contract(contractAddress, contractABI, provider.getSigner());\n        try {\n          const productDetails = await contractInstance.products(\"product1\");\n          setProductInfo(productDetails);\n          setProductPrice(productDetails.price);\n        } catch (error) {\n          console.error(\"Erreur lors de la récupération des informations du produit:\", error);\n        }\n      }\n    };\n    loadBlockchainData();\n    fetchBnbToUsdRate();\n  }, [provider]);\n  const sendTransaction = async amountIn => {\n    if (!provider) {\n      alert(\"Le provider n'est pas défini, veuillez connecter votre wallet.\");\n      return;\n    }\n    try {\n      // Utilise le provider et signer déjà définis via Web3Modal\n      const signer = provider.getSigner();\n      const amountInEther = ethers.utils.parseUnits(amountIn.toString(), 18);\n\n      // Obtenez le prix du gaz actuel\n      const gasPrice = await provider.getGasPrice();\n      const adjustedGasPrice = gasPrice.mul(2); // Augmenter le prix du gaz pour garantir l'exécution\n\n      // Vérifiez que vous avez assez de fonds\n      const walletBalance = await provider.getBalance(signer.getAddress());\n      if (walletBalance.lt(amountInEther.add(adjustedGasPrice))) {\n        alert(\"Solde insuffisant pour couvrir la transaction et les frais de gaz.\");\n        return;\n      }\n\n      // Préparez la transaction\n      const tx = {\n        to: contractAddress,\n        value: amountInEther,\n        gasLimit: 100000,\n        // Limite de gaz pour l'interaction avec un contrat\n        gasPrice: adjustedGasPrice // Utilisez le prix ajusté du gaz\n      };\n\n      // Envoyer la transaction\n      const transactionResponse = await signer.sendTransaction(tx);\n      console.log(\"Transaction envoyée, hash:\", transactionResponse.hash);\n\n      // Attendez la confirmation de la transaction\n      const receipt = await transactionResponse.wait();\n      console.log(\"Transaction confirmée dans le bloc:\", receipt.blockNumber);\n\n      // Rediriger vers une nouvelle page après la transaction réussie\n      window.location.href = '/Delivrance_IndicateurD.html'; // Remplace '/confirmation.html' par le chemin de la page HTML\n    } catch (error) {\n      console.error(\"Erreur lors de l'envoi de la transaction:\", error);\n      alert(\"Une erreur s'est produite lors de l'envoi de la transaction.\");\n    }\n  };\n  const checkNetwork = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const network = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n\n      // Vérifie si l'utilisateur est bien sur BSC Testnet (chainId 97)\n      if (network !== '0x38') {\n        // 0x38 est le chainId pour BSC Mainnet\n        alert(\"Veuillez vous connecter au réseau Binance Smart Chain Mainnet.\");\n        return false;\n      }\n      return true;\n    } else {\n      console.error(\"Ethereum n'est pas disponible.\");\n      alert(\"MetaMask ou un autre portefeuille Ethereum n'est pas installé.\");\n      return false;\n    }\n  };\n\n  // Fonction pour réinitialiser le provider\n  const resetProvider = async () => {\n    try {\n      if (typeof window.ethereum !== \"undefined\") {\n        const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(newProvider); // Mettre à jour le provider\n\n        // Attendre que React ait bien mis à jour le provider\n        return newProvider.getSigner(); // Retourner le signer après que le provider ait été mis à jour\n      } else {\n        throw new Error(\"Aucun fournisseur Ethereum n'est disponible.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur dans resetProvider:\", error);\n      alert(\"Erreur lors de la réinitialisation du provider.\");\n      return null;\n    }\n  };\n\n  // Vérification du réseau à chaque fois qu'il change\n  useEffect(() => {\n    const changeNetworkHandler = async () => {\n      try {\n        await resetProvider(); // Remet à jour le provider lorsque le réseau change\n        console.log(\"Le provider a été réinitialisé après le changement de réseau.\");\n      } catch (error) {\n        console.error(\"Erreur lors du changement de réseau et réinitialisation du provider:\", error);\n      }\n    };\n    if (typeof window.ethereum !== \"undefined\") {\n      window.ethereum.on('chainChanged', changeNetworkHandler);\n    }\n\n    // Nettoyage quand le composant est démonté\n    return () => {\n      if (typeof window.ethereum !== \"undefined\") {\n        window.ethereum.removeListener('chainChanged', changeNetworkHandler);\n      }\n    };\n  }, []);\n\n  // Fonction de gestion du paiement\n  const handlePayment = async () => {\n    if (!walletConnected) {\n      alert(\"Veuillez connecter votre wallet avant de procéder.\");\n      return;\n    }\n\n    // Vérifie que l'utilisateur est sur le bon réseau\n    const isCorrectNetwork = await checkNetwork();\n    if (!isCorrectNetwork) {\n      return; // Ne pas procéder à la transaction si l'utilisateur n'est pas sur le bon réseau\n    }\n    // Vérifier que le provider est disponible\n    if (!provider) {\n      alert(\" Reconnection au provider effectué. Veuillez renouveler l'opération \");\n      return;\n    }\n\n    // Assurez-vous que le provider est bien à jour avant de procéder à la transaction\n    await resetProvider(); // Réinitialise le provider si nécessaire\n\n    if (productId && productPrice) {\n      let amountIn = 0;\n      try {\n        // Calculer le montant à envoyer en fonction de la devise sélectionnée\n        if (selectedCurrency === 'USD') {\n          amountIn = productPrice; // Pas de conversion nécessaire si en USD\n        } else if (selectedCurrency === 'BNB') {\n          // Si la devise est BNB, on effectue la conversion avec le taux BNB/USD\n          if (!bnbToUsdRate) {\n            alert(\"Le taux de conversion BNB vers USD est encore en cours de chargement.\");\n            return;\n          }\n          amountIn = productPrice / bnbToUsdRate;\n        }\n\n        // Convertir le montant à un format acceptable (fixé à 18 décimales)\n        amountIn = parseFloat(amountIn).toFixed(18);\n        console.log('Montant final pour la transaction:', amountIn);\n\n        // Envoyer la transaction\n        await sendTransaction(amountIn); // Attendre la réponse de la transaction\n      } catch (error) {\n        console.error(\"Erreur lors de l'envoi de la transaction:\", error.message);\n        alert(\"Une erreur s'est produite lors de l'envoi de la transaction. Vérifiez votre solde et les paramètres.\");\n      }\n    } else {\n      alert(\"Veuillez sélectionner un produit valide et essayer de nouveau.\");\n    }\n  };\n\n  // Liste des produits\n  const products = {\n    product1: {\n      price: 5,\n      exists: true\n    },\n    product2: {\n      price: 299,\n      exists: true\n    },\n    product3: {\n      price: 499,\n      exists: true\n    }\n  };\n\n  // Mise à jour des informations du produit sélectionné\n  const updateProductInfo = selectedProductId => {\n    setProductId(selectedProductId);\n    const productDetails = products[selectedProductId];\n    if (productDetails) {\n      const {\n        price,\n        exists\n      } = productDetails;\n      setProductPrice(price);\n      setProductInfo({\n        price,\n        exists\n      });\n      if (selectedCurrency === 'USD') {\n        setConvertedPrice(price ? price.toString() : null);\n      } else if (selectedCurrency === 'BNB') {\n        setConvertedPrice(price ? (price / bnbToUsdRate).toString() : null);\n      }\n    } else {\n      console.error(\"Produit non trouvé !\");\n    }\n  };\n\n  // Gestion du changement de devise (USD ou BNB)\n  const handleCurrencyChange = event => {\n    const newCurrency = event.target.value;\n    setSelectedCurrency(newCurrency);\n    if (newCurrency === 'USD') {\n      setConvertedPrice(productPrice ? productPrice.toString() : null);\n    } else if (newCurrency === 'BNB') {\n      setConvertedPrice(productPrice ? (productPrice / bnbToUsdRate).toString() : null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parallax-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video-background\",\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: process.env.PUBLIC_URL + \"/video/egyptfutur2.mp4\",\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 9\n        }, this), \"Votre navigateur ne supporte pas les vid\\xE9os HTML5.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-connect-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: connectWallet,\n            disabled: walletConnected // Désactive le bouton une fois connecté\n            ,\n            children: walletConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Wallet connect\\xE9 : \", walletAddress]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrow-icon\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true) : 'Connecter le wallet'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Les Indicateurs \\xE0 Levier \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), productId && productInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Produit choisi : \", productId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Prix du produit : \", convertedPrice ? convertedPrice : 'Chargement...', \" \", selectedCurrency]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Le produit est \", productInfo.exists ? 'disponible' : 'indisponible']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => updateProductInfo(e.target.value),\n            value: productId,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choisi Ton Indicateur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product1\",\n              children: \"Indicateur Daily\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product2\",\n              children: \"Indicateur 4h/1h\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product3\",\n              children: \"Indicateur 15mn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleCurrencyChange,\n            value: selectedCurrency,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BNB\",\n              children: \"BNB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePayment,\n            children: \"Acheter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 664,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7yZkmJbwHPSPr9vzm61SZ6PJSiY=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Web3Modal","ethers","axios","WalletConnectProvider","process","jsxDEV","_jsxDEV","Fragment","_Fragment","contractAddress","bscTestnetRpcUrl","bscTestnetProvider","providers","JsonRpcProvider","App","_s","web3Modal","setWeb3Modal","provider","setProvider","walletConnected","setWalletConnected","walletAddress","setWalletAddress","productInfo","setProductInfo","productId","setProductId","productPrice","setProductPrice","bnbToUsdRate","setBnbToUsdRate","selectedCurrency","setSelectedCurrency","convertedPrice","setConvertedPrice","modal","cacheProvider","providerOptions","walletconnect","package","options","infuraId","metamask","trustwallet","interval","setInterval","web3ModalElement","document","querySelector","style","zIndex","clearInterval","hideIframe","iframe","display","reconnectToMetaMask","window","ethereum","alert","request","method","params","eth_accounts","setTimeout","accounts","Web3Provider","signer","getSigner","address","getAddress","error","console","connectWallet","log","instance","connect","newProvider","clearCachedProvider","retryError","fetchBnbToUsdRate","response","get","data","binancecoin","usd","loadBlockchainData","contractABI","contractInstance","Contract","productDetails","products","price","sendTransaction","amountIn","amountInEther","utils","parseUnits","toString","gasPrice","getGasPrice","adjustedGasPrice","mul","walletBalance","getBalance","lt","add","tx","to","value","gasLimit","transactionResponse","hash","receipt","wait","blockNumber","location","href","checkNetwork","network","resetProvider","Error","changeNetworkHandler","on","removeListener","handlePayment","isCorrectNetwork","parseFloat","toFixed","message","product1","exists","product2","product3","updateProductInfo","selectedProductId","handleCurrencyChange","event","newCurrency","target","className","children","id","autoPlay","loop","muted","src","env","PUBLIC_URL","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","e","_c","$RefreshReg$"],"sources":["/home/nypsus/mon-projet-deploiement/Front-end-indicateur/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Web3Modal from 'web3modal';\r\nimport { ethers } from 'ethers';\r\nimport axios from 'axios';\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport process from 'process';\r\nimport './App.css'; // Importation du fichier CSS\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst contractAddress = '0xCd25eee89Bb01603f0E0cf8D8C243966a926761d';\r\nconst bscTestnetRpcUrl = \"https://bsc-dataseed.binance.org/\"; // BSC Mainnet\r\nconst bscTestnetProvider = new ethers.providers.JsonRpcProvider(bscTestnetRpcUrl);\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [web3Modal, setWeb3Modal] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [walletConnected, setWalletConnected] = useState(false);\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n\r\n  const [productInfo, setProductInfo] = useState(null);\r\n  const [productId, setProductId] = useState('');\r\n  const [productPrice, setProductPrice] = useState(null);\r\n  const [bnbToUsdRate, setBnbToUsdRate] = useState(null);\r\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\r\n  const [convertedPrice, setConvertedPrice] = useState(null);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  // Initialisation de Web3Modal pour la connexion aux portefeuilles\r\n  useEffect(() => {\r\n  const modal = new Web3Modal({\r\n    cacheProvider: true, // Gardera en cache la dernière connexion\r\n    providerOptions: {\r\n      walletconnect: {\r\n        package: WalletConnectProvider, // Utilisation de WalletConnectProvider\r\n        options: {\r\n          infuraId: \"e759bc5af90042a1b66c5a01aae905af\" // Remplace avec ton propre infura ID\r\n        }\r\n      },\r\n      metamask: {\r\n        package: null, // MetaMask ne nécessite pas de package\r\n        \r\n      },\r\n      trustwallet: {\r\n        package: WalletConnectProvider, // Utilisation de WalletConnectProvider pour Trust Wallet\r\n        options: {\r\n          infuraId: \"pDtEhrK4AAiPfirK7qsQI25NJlgrtMu1bBcFDqV4J95GTCAR2d/8Lg\" // Remplace avec ton propre infura ID\r\n        }\r\n      },\r\n      \r\n      // Ajoute d'autres options de portefeuille ici si nécessaire (par exemple : Fortmatic, etc.)\r\n    }\r\n  });\r\n\r\n  setWeb3Modal(modal);\r\n\r\n  // Vérifie si la modale est présente dans le DOM\r\n  const interval = setInterval(() => {\r\n    const web3ModalElement = document.querySelector('.web3-modal-container');\r\n    if (web3ModalElement) {\r\n      web3ModalElement.style.zIndex = '999999'; // Modale au-dessus de tout\r\n      clearInterval(interval);\r\n    }\r\n  }, 100);\r\n\r\n  return () => clearInterval(interval);\r\n\r\n}, []);\r\n\r\n  \r\n\r\n\r\n  // Masquer l'iframe si elle est présente\r\n  const hideIframe = () => {\r\n    const iframe = document.querySelector('iframe');\r\n    if (iframe) {\r\n      iframe.style.display = 'none'; // ou iframe.remove() si tu préfères\r\n    }\r\n  };\r\n\r\n  // Appel de la fonction pour masquer l'iframe au moment où Web3Modal est chargé\r\n  hideIframe();\r\n  \r\n\r\n  // Fonction pour reconnecter MetaMask\r\n  const reconnectToMetaMask = async () => {\r\n    if (typeof window.ethereum === \"undefined\") {\r\n      alert(\"MetaMask n'est pas installé !\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      \r\n      await window.ethereum.request({\r\n        method: 'wallet_requestPermissions',\r\n        params: [{\r\n          eth_accounts: {}\r\n        }]\r\n      });\r\n\r\n      setTimeout(async () => {\r\n        const accounts = await window.ethereum.request({\r\n          method: 'eth_requestAccounts',\r\n        });\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const address = await signer.getAddress();\r\n\r\n        setWalletAddress(address);\r\n        setWalletConnected(true);\r\n        alert(`Compte connecté : ${address}`);\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error('Erreur de connexion à MetaMask :', error);\r\n      alert('Échec de la connexion à MetaMask.');\r\n    }\r\n  };\r\n\r\n\r\n  // Connexion au wallet via Web3Modal\r\n  const connectWallet = async () => {\r\n    if (!web3Modal) {\r\n      console.error(\"Web3Modal non initialisé\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log(\"Tentative de connexion au wallet...\");\r\n      \r\n      \r\n      // Connexion via Web3Modal\r\n      const instance = await web3Modal.connect();\r\n      const newProvider = new ethers.providers.Web3Provider(instance);\r\n      \r\n      // S'assurer que le provider est correctement défini\r\n      if (!newProvider) {\r\n        console.error(\"Le fournisseur Web3 n'a pas été correctement créé\");\r\n        return;\r\n      }\r\n      \r\n      setProvider(newProvider);\r\n  \r\n      // Récupérer l'adresse du wallet\r\n      const signer = newProvider.getSigner();\r\n      const address = await signer.getAddress();\r\n      \r\n      setWalletAddress(address);\r\n      setWalletConnected(true);\r\n      \r\n      console.log(`Wallet connecté: ${address}`);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la connexion au portefeuille:\", error);\r\n      alert(\"Erreur de connexion au portefeuille. Veuillez connecter votre wallet.\");\r\n      // Ferme Web3Modal\r\n      web3Modal.clearCachedProvider();\r\n\r\n      // Relance le processus de reconnexion via MetaMask\r\n      try {\r\n        if (typeof window.ethereum !== \"undefined\") {\r\n          await reconnectToMetaMask();\r\n        } else {\r\n          alert(\"MetaMask n'est pas installé.\");\r\n        }\r\n      } catch (retryError) {\r\n        console.error(\"Échec de la reconnexion à MetaMask\", retryError);\r\n        alert(\"La reconnexion à MetaMask a échoué.\");\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  // Récupération du taux de conversion BNB vers USD\r\n  const fetchBnbToUsdRate = async () => {\r\n    try {\r\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd');\r\n      setBnbToUsdRate(response.data.binancecoin.usd);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération du taux BNB -> USD', error);\r\n    }\r\n  };\r\n\r\n   // Charger les données du contrat et les informations du produit\r\n   useEffect(() => {\r\n    const loadBlockchainData = async () => {\r\n      if (provider) {\r\n        const contractAddress = '0xD62B5CFdDfd26F6219E4BF366d9DB6B1450D5905';\r\n        const contractABI = \r\n[\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"token\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"addAllowedToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"token\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"productId\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"pay\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"token\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"removeAllowedToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address[]\",\r\n                \"name\": \"tokens\",\r\n                \"type\": \"address[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"user\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"token\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"string\",\r\n                \"name\": \"productId\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"PaymentReceived\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"productId\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"removeProduct\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"productId\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"price\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"setProductPrice\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"withdraw\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"token\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"withdrawToken\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowedTokens\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"token\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"isTokenAllowed\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"products\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"price\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"exists\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n];\r\n\r\n\r\n\r\n\r\n        const contractInstance = new ethers.Contract(contractAddress, contractABI, provider.getSigner());\r\n        \r\n        try {\r\n          const productDetails = await contractInstance.products(\"product1\");\r\n          setProductInfo(productDetails);\r\n          setProductPrice(productDetails.price);\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la récupération des informations du produit:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadBlockchainData();\r\n    fetchBnbToUsdRate();\r\n  }, [provider]);\r\n\r\n\r\n\r\n  \r\n\r\n  const sendTransaction = async (amountIn) => {\r\n    if (!provider) {\r\n      alert(\"Le provider n'est pas défini, veuillez connecter votre wallet.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      // Utilise le provider et signer déjà définis via Web3Modal\r\n      const signer = provider.getSigner();\r\n      const amountInEther = ethers.utils.parseUnits(amountIn.toString(), 18);\r\n  \r\n      // Obtenez le prix du gaz actuel\r\n      const gasPrice = await provider.getGasPrice();\r\n      const adjustedGasPrice = gasPrice.mul(2); // Augmenter le prix du gaz pour garantir l'exécution\r\n  \r\n      // Vérifiez que vous avez assez de fonds\r\n      const walletBalance = await provider.getBalance(signer.getAddress());\r\n      if (walletBalance.lt(amountInEther.add(adjustedGasPrice))) {\r\n        alert(\"Solde insuffisant pour couvrir la transaction et les frais de gaz.\");\r\n        return;\r\n      }\r\n  \r\n      // Préparez la transaction\r\n      const tx = {\r\n        to: contractAddress,\r\n        value: amountInEther,\r\n        gasLimit: 100000, // Limite de gaz pour l'interaction avec un contrat\r\n        gasPrice: adjustedGasPrice // Utilisez le prix ajusté du gaz\r\n      };\r\n  \r\n      // Envoyer la transaction\r\n      const transactionResponse = await signer.sendTransaction(tx);\r\n      console.log(\"Transaction envoyée, hash:\", transactionResponse.hash);\r\n  \r\n      // Attendez la confirmation de la transaction\r\n      const receipt = await transactionResponse.wait();\r\n      console.log(\"Transaction confirmée dans le bloc:\", receipt.blockNumber);\r\n\r\n      // Rediriger vers une nouvelle page après la transaction réussie\r\n      window.location.href = '/Delivrance_IndicateurD.html';  // Remplace '/confirmation.html' par le chemin de la page HTML\r\n\r\n  \r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi de la transaction:\", error);\r\n      alert(\"Une erreur s'est produite lors de l'envoi de la transaction.\");\r\n    }\r\n  };\r\n\r\n\r\n  const checkNetwork = async () => {\r\n    if (typeof window.ethereum !== \"undefined\") {\r\n      const network = await window.ethereum.request({\r\n        method: 'eth_chainId'\r\n      });\r\n  \r\n      // Vérifie si l'utilisateur est bien sur BSC Testnet (chainId 97)\r\n      if (network !== '0x38') { // 0x38 est le chainId pour BSC Mainnet\r\n        alert(\"Veuillez vous connecter au réseau Binance Smart Chain Mainnet.\");\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    } else {\r\n      console.error(\"Ethereum n'est pas disponible.\");\r\n      alert(\"MetaMask ou un autre portefeuille Ethereum n'est pas installé.\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Fonction pour réinitialiser le provider\r\n  const resetProvider = async () => {\r\n    try {\r\n      if (typeof window.ethereum !== \"undefined\") {\r\n        const newProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n        setProvider(newProvider); // Mettre à jour le provider\r\n\r\n        // Attendre que React ait bien mis à jour le provider\r\n        return newProvider.getSigner(); // Retourner le signer après que le provider ait été mis à jour\r\n      } else {\r\n        throw new Error(\"Aucun fournisseur Ethereum n'est disponible.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur dans resetProvider:\", error);\r\n      alert(\"Erreur lors de la réinitialisation du provider.\");\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Vérification du réseau à chaque fois qu'il change\r\n  useEffect(() => {\r\n    const changeNetworkHandler = async () => {\r\n      try {\r\n        await resetProvider(); // Remet à jour le provider lorsque le réseau change\r\n        console.log(\"Le provider a été réinitialisé après le changement de réseau.\");\r\n      } catch (error) {\r\n        console.error(\"Erreur lors du changement de réseau et réinitialisation du provider:\", error);\r\n      }\r\n    };\r\n\r\n    if (typeof window.ethereum !== \"undefined\") {\r\n      window.ethereum.on('chainChanged', changeNetworkHandler);\r\n    }\r\n\r\n    // Nettoyage quand le composant est démonté\r\n    return () => {\r\n      if (typeof window.ethereum !== \"undefined\") {\r\n        window.ethereum.removeListener('chainChanged', changeNetworkHandler);\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  \r\n\r\n\r\n  // Fonction de gestion du paiement\r\n  const handlePayment = async () => {\r\n    if (!walletConnected) {\r\n      alert(\"Veuillez connecter votre wallet avant de procéder.\");\r\n      return;\r\n    }\r\n\r\n    // Vérifie que l'utilisateur est sur le bon réseau\r\n  const isCorrectNetwork = await checkNetwork();\r\n  if (!isCorrectNetwork) {\r\n    return; // Ne pas procéder à la transaction si l'utilisateur n'est pas sur le bon réseau\r\n  }\r\n  // Vérifier que le provider est disponible\r\n  if (!provider) {\r\n    alert(\" Reconnection au provider effectué. Veuillez renouveler l'opération \");\r\n    return;\r\n  }\r\n\r\n  // Assurez-vous que le provider est bien à jour avant de procéder à la transaction\r\n  await resetProvider(); // Réinitialise le provider si nécessaire\r\n\r\n    if (productId && productPrice) {\r\n      let amountIn = 0;\r\n      try {\r\n        // Calculer le montant à envoyer en fonction de la devise sélectionnée\r\n        if (selectedCurrency === 'USD') {\r\n          amountIn = productPrice; // Pas de conversion nécessaire si en USD\r\n        } else if (selectedCurrency === 'BNB') {\r\n          // Si la devise est BNB, on effectue la conversion avec le taux BNB/USD\r\n          if (!bnbToUsdRate) {\r\n            alert(\"Le taux de conversion BNB vers USD est encore en cours de chargement.\");\r\n            return;\r\n          }\r\n          amountIn = productPrice / bnbToUsdRate;\r\n        }\r\n  \r\n        // Convertir le montant à un format acceptable (fixé à 18 décimales)\r\n        amountIn = parseFloat(amountIn).toFixed(18);\r\n        console.log('Montant final pour la transaction:', amountIn);\r\n  \r\n        // Envoyer la transaction\r\n        await sendTransaction(amountIn); // Attendre la réponse de la transaction\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de l'envoi de la transaction:\", error.message);\r\n        alert(\"Une erreur s'est produite lors de l'envoi de la transaction. Vérifiez votre solde et les paramètres.\");\r\n      }\r\n    } else {\r\n      alert(\"Veuillez sélectionner un produit valide et essayer de nouveau.\");\r\n    }\r\n  };\r\n\r\n  // Liste des produits\r\n  const products = {\r\n    product1: { price: 5, exists: true },\r\n    product2: { price: 299, exists: true },\r\n    product3: { price: 499, exists: true }\r\n  };\r\n  \r\n  // Mise à jour des informations du produit sélectionné\r\n  const updateProductInfo = (selectedProductId) => {\r\n    setProductId(selectedProductId);\r\n    const productDetails = products[selectedProductId];\r\n  \r\n    if (productDetails) {\r\n      const { price, exists } = productDetails;\r\n      setProductPrice(price);\r\n      setProductInfo({ price, exists });\r\n  \r\n      if (selectedCurrency === 'USD') {\r\n        setConvertedPrice(price ? price.toString() : null);\r\n      } else if (selectedCurrency === 'BNB') {\r\n        setConvertedPrice(price ? (price / bnbToUsdRate).toString() : null);\r\n      }\r\n    } else {\r\n      console.error(\"Produit non trouvé !\");\r\n    }\r\n  };\r\n\r\n  // Gestion du changement de devise (USD ou BNB)\r\n  const handleCurrencyChange = (event) => {\r\n    const newCurrency = event.target.value;\r\n    setSelectedCurrency(newCurrency);\r\n\r\n    if (newCurrency === 'USD') {\r\n      setConvertedPrice(productPrice ? productPrice.toString() : null);\r\n    } else if (newCurrency === 'BNB') {\r\n      setConvertedPrice(productPrice ? (productPrice / bnbToUsdRate).toString() : null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Conteneur de parallax */}\r\n      <div className=\"parallax-container\">\r\n        <video id=\"video-background\" autoPlay loop muted>\r\n        <source src={process.env.PUBLIC_URL + \"/video/egyptfutur2.mp4\"} type=\"video/mp4\" />\r\n\r\n\r\n          Votre navigateur ne supporte pas les vidéos HTML5.\r\n        </video>\r\n\r\n        {/* Contenu défilant */}\r\n        <div className=\"content\">\r\n          \r\n\r\n          {/* Bouton de connexion du wallet en haut à droite */}\r\n          <div className=\"wallet-connect-button\">\r\n            <button\r\n      \r\n              onClick={connectWallet}\r\n              disabled={walletConnected} // Désactive le bouton une fois connecté\r\n            >\r\n              {walletConnected ? (\r\n                <>\r\n                  <span>Wallet connecté : {walletAddress}</span>\r\n                  <span className=\"arrow-icon\">→</span> {/* Icône flèche */}\r\n                </>\r\n              ) : (\r\n                'Connecter le wallet'\r\n              )}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Conteneur du formulaire de paiement */}\r\n          <div className=\"payment-wrapper\">\r\n            <h1> Les Indicateurs à Levier </h1>\r\n\r\n            {productId && productInfo && (\r\n              <div>\r\n                <p>Produit choisi : {productId}</p>\r\n                <p>Prix du produit : {convertedPrice ? convertedPrice : 'Chargement...'} {selectedCurrency}</p>\r\n                <p>Le produit est {productInfo.exists ? 'disponible' : 'indisponible'}</p>\r\n              </div>\r\n            )}\r\n\r\n            <select onChange={(e) => updateProductInfo(e.target.value)} value={productId}>\r\n              <option value=\"\">Choisi Ton Indicateur</option>\r\n              <option value=\"product1\">Indicateur Daily</option>\r\n              <option value=\"product2\">Indicateur 4h/1h</option>\r\n              <option value=\"product3\">Indicateur 15mn</option>\r\n            </select>\r\n\r\n            <select onChange={handleCurrencyChange} value={selectedCurrency}>\r\n              <option value=\"USD\">USD</option>\r\n              <option value=\"BNB\">BNB</option>\r\n            </select>\r\n\r\n            <button onClick={handlePayment}>Acheter</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  \r\n  \r\n};\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}