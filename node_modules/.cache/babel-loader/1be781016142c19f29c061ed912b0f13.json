{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import Web3Modal from'web3modal';import{ethers}from'ethers';import axios from'axios';import WalletConnectProvider from\"@walletconnect/web3-provider\";import process from'process';import'./App.css';// Importation du fichier CSS\nimport'./index.css';// Ajoute cette ligne dans ton fichier JavaScript\n// Adresse du contrat USDT sur BSC (assure-toi que c'est l'adresse correcte pour le réseau que tu utilises)\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const usdtAddress='0x55d398326f99059fF775485246999027B3197955';// Adresse du contrat USDT sur Binance Smart Chain\n// ABI pour le contrat USDT\nconst usdtABI=[// Seules les parties nécessaires pour ton utilisation, par exemple :\n{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];const contractAddress='0xCd25eee89Bb01603f0E0cf8D8C243966a926761d';const bscTestnetRpcUrl=\"https://bsc-dataseed.binance.org/\";// BSC Mainnet\nconst bscTestnetProvider=new ethers.providers.JsonRpcProvider(bscTestnetRpcUrl);function App(){const[web3Modal,setWeb3Modal]=useState(null);const[provider,setProvider]=useState(null);const[walletConnected,setWalletConnected]=useState(false);const[walletAddress,setWalletAddress]=useState('');const[productInfo,setProductInfo]=useState(null);const[productId,setProductId]=useState('');const[productPrice,setProductPrice]=useState(null);const[bnbToUsdRate,setBnbToUsdRate]=useState(null);const[selectedCurrency,setSelectedCurrency]=useState('USD');const[convertedPrice,setConvertedPrice]=useState(null);const[contractInstance,setContractInstance]=useState(null);// Déclarez `contractInstance` ici\n// Initialisation de Web3Modal pour la connexion aux portefeuilles\nuseEffect(()=>{const modal=new Web3Modal({cacheProvider:true,// Gardera en cache la dernière connexion\nproviderOptions:{walletconnect:{package:WalletConnectProvider,// Utilisation de WalletConnectProvider\noptions:{infuraId:\"e759bc5af90042a1b66c5a01aae905af\"// Remplace avec ton propre infura ID\n}},metamask:{package:null// MetaMask ne nécessite pas de package\n},trustwallet:{package:WalletConnectProvider,// Utilisation de WalletConnectProvider pour Trust Wallet\noptions:{infuraId:\"pDtEhrK4AAiPfirK7qsQI25NJlgrtMu1bBcFDqV4J95GTCAR2d/8Lg\"// Remplace avec ton propre infura ID\n}}// Ajoute d'autres options de portefeuille ici si nécessaire (par exemple : Fortmatic, etc.)\n}});setWeb3Modal(modal);// Vérifie si la modale est présente dans le DOM\nconst interval=setInterval(()=>{const web3ModalElement=document.querySelector('.web3-modal-container');if(web3ModalElement){web3ModalElement.style.zIndex='999999';// Modale au-dessus de tout\nclearInterval(interval);}},100);return()=>clearInterval(interval);},[]);// Masquer l'iframe si elle est présente\nconst hideIframe=()=>{const iframe=document.querySelector('iframe');if(iframe){iframe.style.display='none';// ou iframe.remove() si tu préfères\n}};// Appel de la fonction pour masquer l'iframe au moment où Web3Modal est chargé\nhideIframe();// Fonction pour reconnecter MetaMask\nconst reconnectToMetaMask=async()=>{if(typeof window.ethereum===\"undefined\"){alert(\"MetaMask n'est pas installé !\");return;}try{await window.ethereum.request({method:'wallet_requestPermissions',params:[{eth_accounts:{}}]});setTimeout(async()=>{const accounts=await window.ethereum.request({method:'eth_requestAccounts'});const provider=new ethers.providers.Web3Provider(window.ethereum);const signer=provider.getSigner();const address=await signer.getAddress();setWalletAddress(address);setWalletConnected(true);alert(`Compte connecté : ${address}`);},1000);}catch(error){console.error('Erreur de connexion à MetaMask :',error);alert('Échec de la connexion à MetaMask.');}};// Connexion au wallet via Web3Modal\nconst connectWallet=async()=>{if(!web3Modal){console.error(\"Web3Modal non initialisé\");return;}try{console.log(\"Tentative de connexion au wallet...\");// Connexion via Web3Modal\nconst instance=await web3Modal.connect();const newProvider=new ethers.providers.Web3Provider(instance);// S'assurer que le provider est correctement défini\nif(!newProvider){console.error(\"Le fournisseur Web3 n'a pas été correctement créé\");return;}setProvider(newProvider);// Récupérer l'adresse du wallet\nconst signer=newProvider.getSigner();const address=await signer.getAddress();setWalletAddress(address);setWalletConnected(true);console.log(`Wallet connecté: ${address}`);}catch(error){console.error(\"Erreur lors de la connexion au portefeuille:\",error);alert(\"Erreur de connexion au portefeuille. Veuillez connecter votre wallet.\");// Ferme Web3Modal\nweb3Modal.clearCachedProvider();// Relance le processus de reconnexion via MetaMask\ntry{if(typeof window.ethereum!==\"undefined\"){await reconnectToMetaMask();}else{alert(\"MetaMask n'est pas installé.\");}}catch(retryError){console.error(\"Échec de la reconnexion à MetaMask\",retryError);alert(\"La reconnexion à MetaMask a échoué.\");}}};// Récupération du taux de conversion BNB vers USD\nconst fetchBnbToUsdRate=async()=>{try{const response=await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd');setBnbToUsdRate(response.data.binancecoin.usd);}catch(error){console.error('Erreur lors de la récupération du taux BNB -> USD',error);}};// Charger les données du contrat et les informations du produit\nuseEffect(()=>{const loadBlockchainData=async()=>{if(provider){const contractAddress='0xD62B5CFdDfd26F6219E4BF366d9DB6B1450D5905';const contractABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"removeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setProductPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];// Crée une nouvelle instance du contrat\nconst contract=new ethers.Contract(contractAddress,contractABI,provider.getSigner());// Stocke cette instance dans l'état\nsetContractInstance(contract);try{// Vérifie que contractInstance est bien défini avant de l'utiliser\nif(contract){const productDetails=await contract.products(\"product1\");setProductInfo(productDetails);setProductPrice(productDetails.price);}}catch(error){console.error(\"Erreur lors de la récupération des informations du produit:\",error);}}};loadBlockchainData();fetchBnbToUsdRate();},[provider]);// Ajoute `provider` comme dépendance, car `contractInstance` est déjà mis à jour à l'intérieur\nconst[loading,setLoading]=useState(false);// Ajout de l'état loading\nconst[transactionInProgress,setTransactionInProgress]=useState(false);useEffect(()=>{const fetchProductDetails=async()=>{if(productId&&productInfo){setLoading(true);// Afficher \"Chargement...\"\ntry{// Vérifie que productId existe dans productInfo\nconst productDetails=productInfo[productId];// Si le produit n'existe pas ou a un prix invalide\nif(!productDetails||!productDetails.price||productDetails.price<=0){console.error(\"Produit invalide ou prix incorrect.\");alert(\"Produit invalide ou prix incorrect.\");setLoading(false);return;// On arrête l'exécution ici\n}// Si tout est ok, mettre à jour les prix\nsetProductPrice(productDetails.price);setConvertedPrice(productDetails.price);}catch(error){console.error(\"Erreur lors de la récupération des informations produit :\",error);alert(\"Une erreur s'est produite lors de la récupération des informations produit.\");}finally{setLoading(false);// Fin du chargement\n}}};fetchProductDetails();},[productId,productInfo]);// Fonction conversion BNB/USDT\nconst getBnbToUsdRate=async()=>{try{const response=await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd');const bnbToUsdRate=response.data.binancecoin.usd;return bnbToUsdRate;}catch(error){console.error(\"Erreur lors de la récupération du taux de conversion BNB/USD :\",error);return 0;}};const sendTransaction=async(amountIn,fetchedPriceInUsd)=>{if(!provider){alert(\"Le provider n'est pas défini, veuillez connecter votre wallet.\");return;}try{// Utilise le provider et signer déjà définis via Web3Modal\nconst signer=provider.getSigner();const amountInEther=ethers.utils.parseUnits(amountIn.toString(),18);// Obtenez le prix du gaz actuel\nconst gasLimit=50000;// Limite de gaz pour la transaction\nconst{BigNumber}=require(\"ethers\");// Assure-toi que BigNumber est importé correctement si nécessaire\nconst gasPrice=await provider.getGasPrice();// Utilise le prix actuel du gaz\nconst adjustedGasPrice=gasPrice.mul(BigNumber.from(\"110\")).div(BigNumber.from(\"100\"));// à ajuster si bug\nconsole.log(\"GasPrice ajusté : \",adjustedGasPrice.toString());// Affiche le prix ajusté\n// Vérifiez que vous avez assez de fonds\nconst walletBalance=await provider.getBalance(signer.getAddress());if(selectedCurrency==='BNB'&&walletBalance.lt(amountInEther.add(adjustedGasPrice))){alert(\"Solde insuffisant pour couvrir la transaction et les frais de gaz en BNB.\");return;}if(selectedCurrency==='USDT'){// Vérification du solde en USDT\nconst usdtContract=new ethers.Contract(usdtAddress,usdtABI,signer);const usdtBalance=await usdtContract.balanceOf(signer.getAddress());if(usdtBalance.lt(amountInEther)){alert(\"Solde insuffisant en USDT pour couvrir la transaction.\");return;}// Vérifier l'allowance avant d'effectuer le transfert\nconst allowance=await usdtContract.allowance(signer.getAddress(),contractAddress);if(allowance.lt(amountInEther)){alert(\"Veuillez approuver le contrat USDT avant d'envoyer la transaction.\");return;}}// Préparez la transaction\nconst tx={to:contractAddress,value:selectedCurrency==='BNB'?amountInEther:0,// Montant en BNB\ngasLimit:gasLimit,gasPrice:adjustedGasPrice,data:ethers.utils.defaultAbiCoder.encode([\"uint256\"],[fetchedPriceInUsd])// Envoie l'USD comme paramètre\n};// Si la devise est USDT, envoyer les tokens via le contrat\nlet transactionResponse;if(selectedCurrency==='USDT'){const usdtContract=new ethers.Contract(usdtAddress,usdtABI,signer);const tokenAmount=ethers.utils.parseUnits(amountIn.toString(),6);// USDT a 6 décimales\ntransactionResponse=await usdtContract.transferFrom(signer.getAddress(),contractAddress,tokenAmount);console.log(\"USDT envoyés au contrat.\");}else{// Si la devise est BNB, envoyer la transaction en BNB\ntransactionResponse=await signer.sendTransaction(tx);console.log(\"Transaction envoyée:\",transactionResponse.hash);}// Attendez la confirmation de la transaction\nconst receipt=await transactionResponse.wait();if(receipt.status===1){console.log(\"Transaction réussie !\");alert(\"Paiement effectué avec succès.\");// Rediriger vers une nouvelle page après la transaction réussie\nwindow.location.href='/Delivrance_IndicateurD.html';// Remplace '/confirmation.html' par le chemin de la page HTML\n}else{alert(\"Échec de la transaction.\");}}catch(error){console.error(\"Erreur lors de l'envoi de la transaction:\",error.message);alert(\"Une erreur s'est produite lors de l'envoi de la transaction.\");}finally{// Si tu as des actions à effectuer après la transaction, comme réinitialiser un état ou déverrouiller des boutons, tu peux les ajouter ici\nconsole.log(\"Transaction terminée.\");}};const checkNetwork=async()=>{if(typeof window.ethereum!==\"undefined\"){const network=await window.ethereum.request({method:'eth_chainId'});// Vérifie si l'utilisateur est bien sur BSC Testnet (chainId 97)\nif(network!=='0x38'){// 0x38 est le chainId pour BSC Mainnet\nalert(\"Veuillez vous connecter au réseau Binance Smart Chain Mainnet.\");return false;}return true;}else{console.error(\"Ethereum n'est pas disponible.\");alert(\"MetaMask ou un autre portefeuille Ethereum n'est pas installé.\");return false;}};// Fonction pour réinitialiser le provider\nconst resetProvider=async()=>{try{if(typeof window.ethereum!==\"undefined\"){const newProvider=new ethers.providers.Web3Provider(window.ethereum);setProvider(newProvider);// Mettre à jour le provider\n// Attendre que React ait bien mis à jour le provider\nreturn newProvider.getSigner();// Retourner le signer après que le provider ait été mis à jour\n}else{throw new Error(\"Aucun fournisseur Ethereum n'est disponible.\");}}catch(error){console.error(\"Erreur dans resetProvider:\",error);alert(\"Erreur lors de la réinitialisation du provider.\");return null;}};// Vérification du réseau à chaque fois qu'il change\nuseEffect(()=>{const changeNetworkHandler=async()=>{try{await resetProvider();// Remet à jour le provider lorsque le réseau change\nconsole.log(\"Le provider a été réinitialisé après le changement de réseau.\");}catch(error){console.error(\"Erreur lors du changement de réseau et réinitialisation du provider:\",error);}};if(typeof window.ethereum!==\"undefined\"){window.ethereum.on('chainChanged',changeNetworkHandler);}// Nettoyage quand le composant est démonté\nreturn()=>{if(typeof window.ethereum!==\"undefined\"){window.ethereum.removeListener('chainChanged',changeNetworkHandler);}};},[]);// Fonction de gestion du paiement\nconst handlePayment=async()=>{if(!walletConnected){alert(\"Veuillez connecter votre wallet avant de procéder.\");return;}// Vérifie que l'utilisateur est sur le bon réseau\nconst isCorrectNetwork=await checkNetwork();if(!isCorrectNetwork){return;// Ne pas procéder à la transaction si l'utilisateur n'est pas sur le bon réseau\n}// Vérifier que le provider est disponible\nif(!provider){alert(\" Reconnection au provider effectué. Veuillez renouveler l'opération \");return;}// Vérifie que productId et productPrice sont valides\nif(!productId||!productPrice||productPrice<=0){alert(\"Veuillez sélectionner un produit valide avec un prix correct.\");return;}// Assurez-vous que le provider est bien à jour avant de procéder à la transaction\nawait resetProvider();// Réinitialise le provider si nécessaire\nif(productId&&productPrice){let amountIn=0;try{// Calculer le montant à envoyer en fonction de la devise sélectionnée\nif(selectedCurrency==='USD'){amountIn=productPrice;// Pas de conversion nécessaire si en USD\n}else if(selectedCurrency==='BNB'){// Si la devise est BNB, on effectue la conversion avec le taux BNB/USD\nif(!bnbToUsdRate){alert(\"Le taux de conversion BNB vers USD est encore en cours de chargement.\");return;}amountIn=productPrice/bnbToUsdRate;}// Convertir le montant à un format acceptable (fixé à 18 décimales)\namountIn=parseFloat(amountIn).toFixed(18);console.log('Montant final pour la transaction:',amountIn);// Envoyer la transaction\nawait sendTransaction(amountIn);// Attendre la réponse de la transaction\n}catch(error){console.error(\"Erreur lors de l'envoi de la transaction:\",error.message);alert(\"Une erreur s'est produite lors de l'envoi de la transaction. Vérifiez votre solde et les paramètres.\");}}else{alert(\"Veuillez sélectionner un produit valide et essayer de nouveau.\");}};// Liste des produits\nconst products={product1:{price:5,exists:true},product2:{price:295,exists:true},product3:{price:495,exists:true}};// Mise à jour des informations du produit sélectionné\nconst updateProductInfo=selectedProductId=>{// Vérifier si le produit existe dans la liste des produits\nconst productDetails=products[selectedProductId];// Si le produit n'existe pas ou si son prix est incorrect, afficher une erreur\nif(!productDetails||!productDetails.price||productDetails.price<=0){console.error(\"Produit non valide ou prix incorrect !\");alert(\"Produit invalide ou prix incorrect. Veuillez choisir un produit valide.\");return;// Ne pas continuer si le produit est invalide\n}// Si le produit est valide, on met à jour les informations du produit\nconst{price,exists}=productDetails;setProductPrice(price);// Mettre à jour le prix du produit\nsetProductInfo({price,exists});// Mise à jour du prix converti en fonction de la devise sélectionnée\nif(selectedCurrency==='USD'){setConvertedPrice(price?price.toString():null);}else if(selectedCurrency==='BNB'){setConvertedPrice(price?(price/bnbToUsdRate).toString():null);}};// Gestion du changement de devise (USD ou BNB)\nconst handleCurrencyChange=event=>{const newCurrency=event.target.value;setSelectedCurrency(newCurrency);if(newCurrency==='USD'){setConvertedPrice(productPrice?productPrice.toString():null);}else if(newCurrency==='BNB'){setConvertedPrice(productPrice?(productPrice/bnbToUsdRate).toString():null);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"parallax-container\",children:[/*#__PURE__*/_jsxs(\"video\",{id:\"video-background\",autoPlay:true,loop:true,muted:true,children:[/*#__PURE__*/_jsx(\"source\",{src:\"https://gateway.pinata.cloud/ipfs/QmPZ8v3KzeyH2Dqz29TZFWe4kswkUETJyesZFCFULtagwv\",type:\"video/mp4\"}),\"Votre navigateur ne supporte pas les vid\\xE9os HTML5.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"wallet-connect-button\",children:/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,disabled:walletConnected// Désactive le bouton une fois connecté\n,children:walletConnected?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Wallet connect\\xE9 : \",walletAddress]}),/*#__PURE__*/_jsx(\"span\",{className:\"arrow-icon\",children:\"\\u2192\"}),\" \"]}):'Connecter le wallet'})}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Les Indicateurs \\xE0 Levier \"}),productId&&productInfo&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Produit choisi : \",productId]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Prix du produit : \",convertedPrice?convertedPrice:'Chargement...',\" \",selectedCurrency]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Le produit est \",productInfo.exists?'disponible':'indisponible']})]}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>updateProductInfo(e.target.value),value:productId,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choisi Ton Indicateur\"}),/*#__PURE__*/_jsx(\"option\",{value:\"product1\",children:\"Indicateur Daily\"}),/*#__PURE__*/_jsx(\"option\",{value:\"product2\",children:\"Indicateur 4h/1h\"}),/*#__PURE__*/_jsx(\"option\",{value:\"product3\",children:\"Indicateur 15mn\"})]}),/*#__PURE__*/_jsxs(\"select\",{onChange:handleCurrencyChange,value:selectedCurrency,children:[/*#__PURE__*/_jsx(\"option\",{value:\"USD\",children:\"USD\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BNB\",children:\"BNB\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePayment,children:\"Acheter\"})]})]})]})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","useRef","Web3Modal","ethers","axios","WalletConnectProvider","process","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","usdtAddress","usdtABI","contractAddress","bscTestnetRpcUrl","bscTestnetProvider","providers","JsonRpcProvider","App","web3Modal","setWeb3Modal","provider","setProvider","walletConnected","setWalletConnected","walletAddress","setWalletAddress","productInfo","setProductInfo","productId","setProductId","productPrice","setProductPrice","bnbToUsdRate","setBnbToUsdRate","selectedCurrency","setSelectedCurrency","convertedPrice","setConvertedPrice","contractInstance","setContractInstance","modal","cacheProvider","providerOptions","walletconnect","package","options","infuraId","metamask","trustwallet","interval","setInterval","web3ModalElement","document","querySelector","style","zIndex","clearInterval","hideIframe","iframe","display","reconnectToMetaMask","window","ethereum","alert","request","method","params","eth_accounts","setTimeout","accounts","Web3Provider","signer","getSigner","address","getAddress","error","console","connectWallet","log","instance","connect","newProvider","clearCachedProvider","retryError","fetchBnbToUsdRate","response","get","data","binancecoin","usd","loadBlockchainData","contractABI","contract","Contract","productDetails","products","price","loading","setLoading","transactionInProgress","setTransactionInProgress","fetchProductDetails","getBnbToUsdRate","sendTransaction","amountIn","fetchedPriceInUsd","amountInEther","utils","parseUnits","toString","gasLimit","BigNumber","require","gasPrice","getGasPrice","adjustedGasPrice","mul","from","div","walletBalance","getBalance","lt","add","usdtContract","usdtBalance","balanceOf","allowance","tx","to","value","defaultAbiCoder","encode","transactionResponse","tokenAmount","transferFrom","hash","receipt","wait","status","location","href","message","checkNetwork","network","resetProvider","Error","changeNetworkHandler","on","removeListener","handlePayment","isCorrectNetwork","parseFloat","toFixed","product1","exists","product2","product3","updateProductInfo","selectedProductId","handleCurrencyChange","event","newCurrency","target","className","children","id","autoPlay","loop","muted","src","type","onClick","disabled","onChange","e"],"sources":["/home/nypsus/mon-projet-deploiement/Front-end-indicateur/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport process from 'process';\nimport './App.css'; // Importation du fichier CSS\nimport './index.css'; // Ajoute cette ligne dans ton fichier JavaScript\n\n\n// Adresse du contrat USDT sur BSC (assure-toi que c'est l'adresse correcte pour le réseau que tu utilises)\nconst usdtAddress = '0x55d398326f99059fF775485246999027B3197955'; // Adresse du contrat USDT sur Binance Smart Chain\n\n// ABI pour le contrat USDT\nconst usdtABI = [\n  // Seules les parties nécessaires pour ton utilisation, par exemple :\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"_owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"balance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"_to\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"_value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\n\n\n\nconst contractAddress = '0xCd25eee89Bb01603f0E0cf8D8C243966a926761d';\nconst bscTestnetRpcUrl = \"https://bsc-dataseed.binance.org/\"; // BSC Mainnet\nconst bscTestnetProvider = new ethers.providers.JsonRpcProvider(bscTestnetRpcUrl);\n\n\n\n\nfunction App() {\n  const [web3Modal, setWeb3Modal] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n\n  const [productInfo, setProductInfo] = useState(null);\n  const [productId, setProductId] = useState('');\n  const [productPrice, setProductPrice] = useState(null);\n  const [bnbToUsdRate, setBnbToUsdRate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n  const [convertedPrice, setConvertedPrice] = useState(null);\n  const [contractInstance, setContractInstance] = useState(null); // Déclarez `contractInstance` ici\n\n\n\n\n\n\n\n  \n  // Initialisation de Web3Modal pour la connexion aux portefeuilles\n  useEffect(() => {\n  const modal = new Web3Modal({\n    cacheProvider: true, // Gardera en cache la dernière connexion\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider, // Utilisation de WalletConnectProvider\n        options: {\n          infuraId: \"e759bc5af90042a1b66c5a01aae905af\" // Remplace avec ton propre infura ID\n        }\n      },\n      metamask: {\n        package: null, // MetaMask ne nécessite pas de package\n        \n      },\n      trustwallet: {\n        package: WalletConnectProvider, // Utilisation de WalletConnectProvider pour Trust Wallet\n        options: {\n          infuraId: \"pDtEhrK4AAiPfirK7qsQI25NJlgrtMu1bBcFDqV4J95GTCAR2d/8Lg\" // Remplace avec ton propre infura ID\n        }\n      },\n      \n      // Ajoute d'autres options de portefeuille ici si nécessaire (par exemple : Fortmatic, etc.)\n    }\n  });\n\n  setWeb3Modal(modal);\n\n  // Vérifie si la modale est présente dans le DOM\n  const interval = setInterval(() => {\n    const web3ModalElement = document.querySelector('.web3-modal-container');\n    if (web3ModalElement) {\n      web3ModalElement.style.zIndex = '999999'; // Modale au-dessus de tout\n      clearInterval(interval);\n    }\n  }, 100);\n\n  return () => clearInterval(interval);\n\n}, []);\n\n  \n\n\n  // Masquer l'iframe si elle est présente\n  const hideIframe = () => {\n    const iframe = document.querySelector('iframe');\n    if (iframe) {\n      iframe.style.display = 'none'; // ou iframe.remove() si tu préfères\n    }\n  };\n\n  // Appel de la fonction pour masquer l'iframe au moment où Web3Modal est chargé\n  hideIframe();\n  \n\n  // Fonction pour reconnecter MetaMask\n  const reconnectToMetaMask = async () => {\n    if (typeof window.ethereum === \"undefined\") {\n      alert(\"MetaMask n'est pas installé !\");\n      return;\n    }\n\n    try {\n      \n      await window.ethereum.request({\n        method: 'wallet_requestPermissions',\n        params: [{\n          eth_accounts: {}\n        }]\n      });\n\n      setTimeout(async () => {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n\n        setWalletAddress(address);\n        setWalletConnected(true);\n        alert(`Compte connecté : ${address}`);\n      }, 1000);\n    } catch (error) {\n      console.error('Erreur de connexion à MetaMask :', error);\n      alert('Échec de la connexion à MetaMask.');\n    }\n  };\n\n\n  // Connexion au wallet via Web3Modal\n  const connectWallet = async () => {\n    if (!web3Modal) {\n      console.error(\"Web3Modal non initialisé\");\n      return;\n    }\n    \n    try {\n      console.log(\"Tentative de connexion au wallet...\");\n      \n      \n      // Connexion via Web3Modal\n      const instance = await web3Modal.connect();\n      const newProvider = new ethers.providers.Web3Provider(instance);\n      \n      // S'assurer que le provider est correctement défini\n      if (!newProvider) {\n        console.error(\"Le fournisseur Web3 n'a pas été correctement créé\");\n        return;\n      }\n      \n      setProvider(newProvider);\n  \n      // Récupérer l'adresse du wallet\n      const signer = newProvider.getSigner();\n      const address = await signer.getAddress();\n      \n      setWalletAddress(address);\n      setWalletConnected(true);\n      \n      console.log(`Wallet connecté: ${address}`);\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au portefeuille:\", error);\n      alert(\"Erreur de connexion au portefeuille. Veuillez connecter votre wallet.\");\n      // Ferme Web3Modal\n      web3Modal.clearCachedProvider();\n\n      // Relance le processus de reconnexion via MetaMask\n      try {\n        if (typeof window.ethereum !== \"undefined\") {\n          await reconnectToMetaMask();\n        } else {\n          alert(\"MetaMask n'est pas installé.\");\n        }\n      } catch (retryError) {\n        console.error(\"Échec de la reconnexion à MetaMask\", retryError);\n        alert(\"La reconnexion à MetaMask a échoué.\");\n      }\n    }\n  };\n  \n\n  // Récupération du taux de conversion BNB vers USD\n  const fetchBnbToUsdRate = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd');\n      setBnbToUsdRate(response.data.binancecoin.usd);\n    } catch (error) {\n      console.error('Erreur lors de la récupération du taux BNB -> USD', error);\n    }\n  };\n\n   // Charger les données du contrat et les informations du produit\n   useEffect(() => {\n    const loadBlockchainData = async () => {\n      if (provider) {\n        const contractAddress = '0xD62B5CFdDfd26F6219E4BF366d9DB6B1450D5905';\n        const contractABI = \n[\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"addAllowedToken\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"productId\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"pay\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"removeAllowedToken\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"tokens\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"user\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"productId\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"PaymentReceived\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"productId\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"removeProduct\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"productId\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"price\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setProductPrice\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"withdrawToken\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"allowedTokens\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"token\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isTokenAllowed\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"products\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"price\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"exists\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\n    \n\t}\n];\n\n\n\n\n        // Crée une nouvelle instance du contrat\n        const contract = new ethers.Contract(contractAddress, contractABI, provider.getSigner());\n\n        // Stocke cette instance dans l'état\n        setContractInstance(contract);\n        \n        try {\n          // Vérifie que contractInstance est bien défini avant de l'utiliser\n          if (contract) {\n            const productDetails = await contract.products(\"product1\");\n            setProductInfo(productDetails);\n            setProductPrice(productDetails.price);\n          }\n        } catch (error) {\n          console.error(\"Erreur lors de la récupération des informations du produit:\", error);\n        }\n      }\n    };\n  \n    loadBlockchainData();\n    fetchBnbToUsdRate();\n  }, [provider]);  // Ajoute `provider` comme dépendance, car `contractInstance` est déjà mis à jour à l'intérieur\n  \n\n\n\n  const [loading, setLoading] = useState(false); // Ajout de l'état loading\n  const [transactionInProgress, setTransactionInProgress] = useState(false);\n\n  \n  useEffect(() => {\n    const fetchProductDetails = async () => {\n      if (productId && productInfo) {\n        setLoading(true); // Afficher \"Chargement...\"\n  \n        try {\n          // Vérifie que productId existe dans productInfo\n          const productDetails = productInfo[productId];\n          \n          // Si le produit n'existe pas ou a un prix invalide\n          if (!productDetails || !productDetails.price || productDetails.price <= 0) {\n            console.error(\"Produit invalide ou prix incorrect.\");\n            alert(\"Produit invalide ou prix incorrect.\");\n            setLoading(false);\n            return; // On arrête l'exécution ici\n          }\n  \n          // Si tout est ok, mettre à jour les prix\n          setProductPrice(productDetails.price);\n          setConvertedPrice(productDetails.price);\n        } catch (error) {\n          console.error(\"Erreur lors de la récupération des informations produit :\", error);\n          alert(\"Une erreur s'est produite lors de la récupération des informations produit.\");\n        } finally {\n          setLoading(false); // Fin du chargement\n        }\n      }\n    };\n  \n    fetchProductDetails();\n  }, [productId, productInfo]);\n  \n  \n\n\n// Fonction conversion BNB/USDT\n  const getBnbToUsdRate = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd');\n      const bnbToUsdRate = response.data.binancecoin.usd;\n      return bnbToUsdRate;\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération du taux de conversion BNB/USD :\", error);\n      return 0;\n    }\n  };\n  \n  \n  \n  \n  const sendTransaction = async (amountIn, fetchedPriceInUsd) => {\n    if (!provider) {\n      alert(\"Le provider n'est pas défini, veuillez connecter votre wallet.\");\n      return;\n    }\n  \n    try {\n      // Utilise le provider et signer déjà définis via Web3Modal\n      const signer = provider.getSigner();\n      const amountInEther = ethers.utils.parseUnits(amountIn.toString(), 18);\n  \n      // Obtenez le prix du gaz actuel\n      const gasLimit = 50000;  // Limite de gaz pour la transaction\n      const { BigNumber } = require(\"ethers\");  // Assure-toi que BigNumber est importé correctement si nécessaire\n  \n      const gasPrice = await provider.getGasPrice();  // Utilise le prix actuel du gaz\n      const adjustedGasPrice = gasPrice.mul(BigNumber.from(\"110\")).div(BigNumber.from(\"100\")); // à ajuster si bug\n  \n      console.log(\"GasPrice ajusté : \", adjustedGasPrice.toString());  // Affiche le prix ajusté\n  \n      // Vérifiez que vous avez assez de fonds\n      const walletBalance = await provider.getBalance(signer.getAddress());\n      if (selectedCurrency === 'BNB' && walletBalance.lt(amountInEther.add(adjustedGasPrice))) {\n        alert(\"Solde insuffisant pour couvrir la transaction et les frais de gaz en BNB.\");\n        return;\n      }\n  \n      if (selectedCurrency === 'USDT') {\n        // Vérification du solde en USDT\n        const usdtContract = new ethers.Contract(usdtAddress, usdtABI, signer);\n        const usdtBalance = await usdtContract.balanceOf(signer.getAddress());\n        if (usdtBalance.lt(amountInEther)) {\n          alert(\"Solde insuffisant en USDT pour couvrir la transaction.\");\n          return;\n        }\n  \n        // Vérifier l'allowance avant d'effectuer le transfert\n        const allowance = await usdtContract.allowance(signer.getAddress(), contractAddress);\n        if (allowance.lt(amountInEther)) {\n          alert(\"Veuillez approuver le contrat USDT avant d'envoyer la transaction.\");\n          return;\n        }\n      }\n  \n      // Préparez la transaction\n      const tx = {\n        to: contractAddress,\n        value: selectedCurrency === 'BNB' ? amountInEther : 0,  // Montant en BNB\n        gasLimit: gasLimit,\n        gasPrice: adjustedGasPrice,\n        data: ethers.utils.defaultAbiCoder.encode([\"uint256\"], [fetchedPriceInUsd]),  // Envoie l'USD comme paramètre\n      };\n  \n      // Si la devise est USDT, envoyer les tokens via le contrat\n      let transactionResponse;\n      if (selectedCurrency === 'USDT') {\n        const usdtContract = new ethers.Contract(usdtAddress, usdtABI, signer);\n        const tokenAmount = ethers.utils.parseUnits(amountIn.toString(), 6); // USDT a 6 décimales\n        transactionResponse = await usdtContract.transferFrom(signer.getAddress(), contractAddress, tokenAmount);\n        console.log(\"USDT envoyés au contrat.\");\n      } else {\n        // Si la devise est BNB, envoyer la transaction en BNB\n        transactionResponse = await signer.sendTransaction(tx);\n        console.log(\"Transaction envoyée:\", transactionResponse.hash);\n      }\n  \n      // Attendez la confirmation de la transaction\n      const receipt = await transactionResponse.wait();\n      if (receipt.status === 1) {\n        console.log(\"Transaction réussie !\");\n        alert(\"Paiement effectué avec succès.\");\n        // Rediriger vers une nouvelle page après la transaction réussie\n        window.location.href = '/Delivrance_IndicateurD.html';  // Remplace '/confirmation.html' par le chemin de la page HTML\n  \n      } else {\n        alert(\"Échec de la transaction.\");\n      }\n  \n    } catch (error) {\n      console.error(\"Erreur lors de l'envoi de la transaction:\", error.message);\n      alert(\"Une erreur s'est produite lors de l'envoi de la transaction.\");\n    } finally {\n      // Si tu as des actions à effectuer après la transaction, comme réinitialiser un état ou déverrouiller des boutons, tu peux les ajouter ici\n      console.log(\"Transaction terminée.\");\n    }\n  };\n  \n  \n  \n  \n\n\n  const checkNetwork = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      const network = await window.ethereum.request({\n        method: 'eth_chainId'\n      });\n  \n      // Vérifie si l'utilisateur est bien sur BSC Testnet (chainId 97)\n      if (network !== '0x38') { // 0x38 est le chainId pour BSC Mainnet\n        alert(\"Veuillez vous connecter au réseau Binance Smart Chain Mainnet.\");\n        return false;\n      }\n      \n      return true;\n    } else {\n      console.error(\"Ethereum n'est pas disponible.\");\n      alert(\"MetaMask ou un autre portefeuille Ethereum n'est pas installé.\");\n      return false;\n    }\n  };\n\n\n\n\n\n\n  // Fonction pour réinitialiser le provider\n  const resetProvider = async () => {\n    try {\n      if (typeof window.ethereum !== \"undefined\") {\n        const newProvider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(newProvider); // Mettre à jour le provider\n\n        // Attendre que React ait bien mis à jour le provider\n        return newProvider.getSigner(); // Retourner le signer après que le provider ait été mis à jour\n      } else {\n        throw new Error(\"Aucun fournisseur Ethereum n'est disponible.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur dans resetProvider:\", error);\n      alert(\"Erreur lors de la réinitialisation du provider.\");\n      return null;\n    }\n  };\n\n  // Vérification du réseau à chaque fois qu'il change\n  useEffect(() => {\n    const changeNetworkHandler = async () => {\n      try {\n        await resetProvider(); // Remet à jour le provider lorsque le réseau change\n        console.log(\"Le provider a été réinitialisé après le changement de réseau.\");\n      } catch (error) {\n        console.error(\"Erreur lors du changement de réseau et réinitialisation du provider:\", error);\n      }\n    };\n\n    if (typeof window.ethereum !== \"undefined\") {\n      window.ethereum.on('chainChanged', changeNetworkHandler);\n    }\n\n    // Nettoyage quand le composant est démonté\n    return () => {\n      if (typeof window.ethereum !== \"undefined\") {\n        window.ethereum.removeListener('chainChanged', changeNetworkHandler);\n      }\n    };\n  }, []);\n  \n  \n\n\n  // Fonction de gestion du paiement\n  const handlePayment = async () => {\n    if (!walletConnected) {\n      alert(\"Veuillez connecter votre wallet avant de procéder.\");\n      return;\n    }\n\n    // Vérifie que l'utilisateur est sur le bon réseau\n  const isCorrectNetwork = await checkNetwork();\n  if (!isCorrectNetwork) {\n    return; // Ne pas procéder à la transaction si l'utilisateur n'est pas sur le bon réseau\n  }\n  // Vérifier que le provider est disponible\n  if (!provider) {\n    alert(\" Reconnection au provider effectué. Veuillez renouveler l'opération \");\n    return;\n  }\n\n  // Vérifie que productId et productPrice sont valides\n  if (!productId || !productPrice || productPrice <= 0) {\n    alert(\"Veuillez sélectionner un produit valide avec un prix correct.\");\n    return;\n  }\n\n  // Assurez-vous que le provider est bien à jour avant de procéder à la transaction\n  await resetProvider(); // Réinitialise le provider si nécessaire\n\n    if (productId && productPrice) {\n      let amountIn = 0;\n      try {\n        // Calculer le montant à envoyer en fonction de la devise sélectionnée\n        if (selectedCurrency === 'USD') {\n          amountIn = productPrice; // Pas de conversion nécessaire si en USD\n        } else if (selectedCurrency === 'BNB') {\n          // Si la devise est BNB, on effectue la conversion avec le taux BNB/USD\n          if (!bnbToUsdRate) {\n            alert(\"Le taux de conversion BNB vers USD est encore en cours de chargement.\");\n            return;\n          }\n          amountIn = productPrice / bnbToUsdRate;\n        }\n  \n        // Convertir le montant à un format acceptable (fixé à 18 décimales)\n        amountIn = parseFloat(amountIn).toFixed(18);\n        console.log('Montant final pour la transaction:', amountIn);\n  \n        // Envoyer la transaction\n        await sendTransaction(amountIn); // Attendre la réponse de la transaction\n      } catch (error) {\n        console.error(\"Erreur lors de l'envoi de la transaction:\", error.message);\n        alert(\"Une erreur s'est produite lors de l'envoi de la transaction. Vérifiez votre solde et les paramètres.\");\n      }\n    } else {\n      alert(\"Veuillez sélectionner un produit valide et essayer de nouveau.\");\n    }\n  };\n\n  // Liste des produits\n  const products = {\n    product1: { price: 5, exists: true },\n    product2: { price: 295, exists: true },\n    product3: { price: 495, exists: true }\n  };\n  \n  // Mise à jour des informations du produit sélectionné\n  const updateProductInfo = (selectedProductId) => {\n    // Vérifier si le produit existe dans la liste des produits\n    const productDetails = products[selectedProductId];\n  \n    // Si le produit n'existe pas ou si son prix est incorrect, afficher une erreur\n    if (!productDetails || !productDetails.price || productDetails.price <= 0) {\n      console.error(\"Produit non valide ou prix incorrect !\");\n      alert(\"Produit invalide ou prix incorrect. Veuillez choisir un produit valide.\");\n      return; // Ne pas continuer si le produit est invalide\n    }\n  \n    // Si le produit est valide, on met à jour les informations du produit\n    const { price, exists } = productDetails;\n    \n    setProductPrice(price); // Mettre à jour le prix du produit\n    setProductInfo({ price, exists });\n  \n    // Mise à jour du prix converti en fonction de la devise sélectionnée\n    if (selectedCurrency === 'USD') {\n      setConvertedPrice(price ? price.toString() : null);\n    } else if (selectedCurrency === 'BNB') {\n      setConvertedPrice(price ? (price / bnbToUsdRate).toString() : null);\n    }\n  };\n  \n  \n  \n\n  // Gestion du changement de devise (USD ou BNB)\n  const handleCurrencyChange = (event) => {\n    const newCurrency = event.target.value;\n    setSelectedCurrency(newCurrency);\n\n    if (newCurrency === 'USD') {\n      setConvertedPrice(productPrice ? productPrice.toString() : null);\n    } else if (newCurrency === 'BNB') {\n      setConvertedPrice(productPrice ? (productPrice / bnbToUsdRate).toString() : null);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Conteneur de parallax */}\n      <div className=\"parallax-container\">\n        <video id=\"video-background\" autoPlay loop muted>\n          {/* Remplace la source locale par l'URL IPFS */}\n          <source \n            src=\"https://gateway.pinata.cloud/ipfs/QmPZ8v3KzeyH2Dqz29TZFWe4kswkUETJyesZFCFULtagwv\" \n            type=\"video/mp4\" \n          />\n          Votre navigateur ne supporte pas les vidéos HTML5.\n        </video>\n\n        {/* Contenu défilant */}\n        <div className=\"content\">\n          \n\n          {/* Bouton de connexion du wallet en haut à droite */}\n          <div className=\"wallet-connect-button\">\n            <button\n      \n              onClick={connectWallet}\n              disabled={walletConnected} // Désactive le bouton une fois connecté\n            >\n              {walletConnected ? (\n                <>\n                  <span>Wallet connecté : {walletAddress}</span>\n                  <span className=\"arrow-icon\">→</span> {/* Icône flèche */}\n                </>\n              ) : (\n                'Connecter le wallet'\n              )}\n            </button>\n          </div>\n\n          {/* Conteneur du formulaire de paiement */}\n          <div className=\"payment-wrapper\">\n            <h1> Les Indicateurs à Levier </h1>\n\n            {productId && productInfo && (\n              <div>\n                <p>Produit choisi : {productId}</p>\n                <p>Prix du produit : {convertedPrice ? convertedPrice : 'Chargement...'} {selectedCurrency}</p>\n                <p>Le produit est {productInfo.exists ? 'disponible' : 'indisponible'}</p>\n              </div>\n            )}\n\n            <select onChange={(e) => updateProductInfo(e.target.value)} value={productId}>\n              <option value=\"\">Choisi Ton Indicateur</option>\n              <option value=\"product1\">Indicateur Daily</option>\n              <option value=\"product2\">Indicateur 4h/1h</option>\n              <option value=\"product3\">Indicateur 15mn</option>\n            </select>\n\n            <select onChange={handleCurrencyChange} value={selectedCurrency}>\n              <option value=\"USD\">USD</option>\n              <option value=\"BNB\">BNB</option>\n            </select>\n\n            <button onClick={handlePayment}>Acheter</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  \n  \n};\n\n\nexport default App;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}