{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import Web3Modal from'web3modal';import{ethers}from'ethers';import axios from'axios';import WalletConnectProvider from\"@walletconnect/web3-provider\";import process from'process';import'./App.css';// Importation du fichier CSS\nimport'./index.css';// Ajoute cette ligne dans ton fichier JavaScript\n// Adresse du contrat USDT sur BSC (assure-toi que c'est l'adresse correcte pour le réseau que tu utilises)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const usdtAddress='0x55d398326f99059fF775485246999027B3197955';// Adresse du contrat USDT sur Binance Smart Chain\n// ABI pour le contrat USDT\nconst usdtABI=[\"function balanceOf(address) view returns (uint256)\",\"function allowance(address, address) view returns (uint256)\",\"function approve(address spender, uint256 amount) public returns (bool)\",\"function transferFrom(address sender, address recipient, uint256 amount) public returns (bool)\"];const contractAddress='0xCd25eee89Bb01603f0E0cf8D8C243966a926761d';const bscTestnetRpcUrl=\"https://bsc-dataseed.binance.org/\";// BSC Mainnet\nconst bscTestnetProvider=new ethers.providers.JsonRpcProvider(bscTestnetRpcUrl);function App(){const[web3Modal,setWeb3Modal]=useState(null);const[provider,setProvider]=useState(null);const[walletConnected,setWalletConnected]=useState(false);const[walletAddress,setWalletAddress]=useState('');const[productInfo,setProductInfo]=useState(null);const[selectedProductId,setSelectedProductId]=useState(null);// ou un ID de produit par défaut\nconst[productId,setProductId]=useState('');const[productPrice,setProductPrice]=useState(null);const[bnbToUsdRate,setBnbToUsdRate]=useState(null);const[selectedCurrency,setSelectedCurrency]=useState('USD');const[convertedPrice,setConvertedPrice]=useState(null);const[contractInstance,setContractInstance]=useState(null);// Déclarez `contractInstance` ici\nconst products={product1:{price:5,exists:true,title:\"Indicateur Daily\"},product2:{price:295,exists:true,title:\"Indicateur 4h/1h\"},product3:{price:495,exists:true,title:\"Indicateur 15mn\"}};// Initialisation de Web3Modal pour la connexion aux portefeuilles\nuseEffect(()=>{const modal=new Web3Modal({cacheProvider:true,// Gardera en cache la dernière connexion\nproviderOptions:{walletconnect:{package:WalletConnectProvider,// Utilisation de WalletConnectProvider\noptions:{infuraId:\"e759bc5af90042a1b66c5a01aae905af\"// Remplace avec ton propre infura ID\n}},metamask:{package:null// MetaMask ne nécessite pas de package\n},trustwallet:{package:WalletConnectProvider,// Utilisation de WalletConnectProvider pour Trust Wallet\noptions:{infuraId:\"pDtEhrK4AAiPfirK7qsQI25NJlgrtMu1bBcFDqV4J95GTCAR2d/8Lg\"// Remplace avec ton propre infura ID\n}}// Ajoute d'autres options de portefeuille ici si nécessaire (par exemple : Fortmatic, etc.)\n}});setWeb3Modal(modal);// Vérifie si la modale est présente dans le DOM\nconst interval=setInterval(()=>{const web3ModalElement=document.querySelector('.web3-modal-container');if(web3ModalElement){web3ModalElement.style.zIndex='999999';// Modale au-dessus de tout\nclearInterval(interval);}},100);return()=>clearInterval(interval);},[]);// Masquer l'iframe si elle est présente\nconst hideIframe=()=>{const iframe=document.querySelector('iframe');if(iframe){iframe.style.display='none';// ou iframe.remove() si tu préfères\n}};// Appel de la fonction pour masquer l'iframe au moment où Web3Modal est chargé\nhideIframe();// Fonction pour reconnecter MetaMask\nconst reconnectToMetaMask=async()=>{if(typeof window.ethereum===\"undefined\"){alert(\"MetaMask n'est pas installé !\");return;}try{await window.ethereum.request({method:'wallet_requestPermissions',params:[{eth_accounts:{}}]});setTimeout(async()=>{const accounts=await window.ethereum.request({method:'eth_requestAccounts'});const provider=new ethers.providers.Web3Provider(window.ethereum);const signer=provider.getSigner();const address=await signer.getAddress();setWalletAddress(address);setWalletConnected(true);alert(`Compte connecté : ${address}`);},1000);}catch(error){console.error('Erreur de connexion à MetaMask :',error);alert('Échec de la connexion à MetaMask.');}};// Connexion au wallet via Web3Modal\nconst connectWallet=async()=>{if(!web3Modal){console.error(\"Web3Modal non initialisé\");return;}try{console.log(\"Tentative de connexion au wallet...\");// Connexion via Web3Modal\nconst instance=await web3Modal.connect();const newProvider=new ethers.providers.Web3Provider(instance);// S'assurer que le provider est correctement défini\nif(!newProvider){console.error(\"Le fournisseur Web3 n'a pas été correctement créé\");return;}setProvider(newProvider);// Récupérer l'adresse du wallet\nconst signer=newProvider.getSigner();const address=await signer.getAddress();setWalletAddress(address);setWalletConnected(true);console.log(`Wallet connecté: ${address}`);}catch(error){console.error(\"Erreur lors de la connexion au portefeuille:\",error);alert(\"Erreur de connexion au portefeuille. Veuillez connecter votre wallet.\");// Ferme Web3Modal\nweb3Modal.clearCachedProvider();// Relance le processus de reconnexion via MetaMask\ntry{if(typeof window.ethereum!==\"undefined\"){await reconnectToMetaMask();}else{alert(\"MetaMask n'est pas installé.\");}}catch(retryError){console.error(\"Échec de la reconnexion à MetaMask\",retryError);alert(\"La reconnexion à MetaMask a échoué.\");}}};// Récupération du taux de conversion BNB vers USD\nconst fetchBnbToUsdRate=async()=>{try{const response=await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd');setBnbToUsdRate(response.data.binancecoin.usd);}catch(error){console.error('Erreur lors de la récupération du taux BNB -> USD',error);}};// Charger les données du contrat et les informations du produit\nuseEffect(()=>{const loadBlockchainData=async()=>{if(provider){// Adresse du contrat et ABI\nconst contractAddress='0xCd25eee89Bb01603f0E0cf8D8C243966a926761d';const contractABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"removeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setProductPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];// Crée une nouvelle instance du contrat avec le provider\nconst contract=new ethers.Contract(contractAddress,contractABI,provider.getSigner());// Appel direct à la méthode du contrat, sans attendre que contractInstance soit mis à jour\ntry{const productDetails=await contract.products(\"product1\");setProductInfo(productDetails);setProductPrice(productDetails.price);}catch(error){console.error(\"Erreur lors de la récupération des informations du produit:\",error);}// Stocke cette instance dans l'état\nsetContractInstance(contract);}};loadBlockchainData();fetchBnbToUsdRate();},[provider]);// Dépendance sur 'provider' uniquement, pas besoin de contractInstance ici\nconst payForProduct=async amountIn=>{try{if(!selectedProductId){throw new Error(\"Aucun produit sélectionné.\");}// Récupérer les détails du produit sélectionné\nconst productDetails=products[selectedProductId];if(!productDetails||!productDetails.exists||productDetails.price<=0){throw new Error(\"Produit invalide ou prix incorrect.\");}console.log(\"Détails du produit sélectionné:\",productDetails);// Convertir le prix du produit en unités appropriées (wei pour Ethereum)\nconst priceInWei=ethers.utils.parseUnits(amountIn.toString(),selectedCurrency==='USDT'?6:18);// Conversion du montant en fonction de la devise\n// Appel au contrat pour effectuer l'achat\nconst tx=await contractInstance.buyProduct(selectedProductId,// Identifiant du produit\npriceInWei,// Montant à envoyer (en fonction de la devise)\n{value:selectedCurrency==='BNB'?priceInWei:0}// Si c'est BNB, l'envoyer dans le champ 'value'\n);// Attendre que la transaction soit minée (confirmée)\nconst receipt=await tx.wait();console.log(\"Transaction réussie:\",receipt);alert(\"Paiement effectué avec succès !\");}catch(error){console.error(\"Erreur lors du paiement:\",error);alert(\"Une erreur s'est produite lors du paiement. Veuillez réessayer.\");}};const[loading,setLoading]=useState(false);// Ajout de l'état loading\nconst[transactionInProgress,setTransactionInProgress]=useState(false);// Fonction pour approuver USDT\nconst approveUSDT=async amountToSend=>{const signer=new ethers.providers.Web3Provider(window.ethereum).getSigner();const usdtContract=new ethers.Contract(usdtAddress,usdtABI,signer);try{const allowance=await usdtContract.allowance(await signer.getAddress(),contractAddress);console.log(\"Allowance actuelle:\",allowance.toString());if(allowance.lt(amountToSend)){console.log(\"Allowance insuffisante, approbation en cours...\");const tx=await usdtContract.approve(contractAddress,amountToSend);const receipt=await tx.wait();if(receipt.status===1){console.log(\"Allowance mise à jour !\");}else{console.error(\"L'approbation de l'allowance a échoué.\");throw new Error(\"Échec de l'approbation de l'allowance.\");}}else{console.log(\"Allowance suffisante.\");}}catch(error){console.error(\"Erreur lors de l'approbation de l'allowance USDT :\",error);}};// Vérification de l'allowance\nconst checkAllowance=async amount=>{try{// Assure-toi de récupérer l'instance du token, par exemple USDT\nconst tokenContract=new ethers.Contract(usdtAddress,usdtABI,provider.getSigner());const allowance=await tokenContract.allowance(walletAddress,contractInstance.address);if(allowance.lt(amount)){// Si l'allowance est insuffisante, demander une approbation\nconsole.log(\"Allowance insuffisante, demande d'approbation...\");await approveToken(amount);}else{console.log(\"Allowance suffisante\");// Proceed with the payment if allowance is sufficient\n}}catch(error){console.error(\"Erreur lors de la vérification de l'allowance\",error);}};const approveToken=async amount=>{try{const tokenContract=new ethers.Contract(usdtAddress,usdtABI,provider.getSigner());console.log(\"Demande d'approbation pour un montant de:\",amount.toString());const tx=await tokenContract.approve(contractInstance.address,amount);console.log(\"Transaction d'approbation envoyée:\",tx.hash);// Attendre que la transaction soit confirmée\nconst receipt=await tx.wait();if(receipt.status===1){console.log(\"Approvisionnement effectué avec succès !\");}else{console.error(\"La transaction d'approbation a échoué.\");}// Une fois l'approbation effectuée, appeler la fonction de paiement\nawait payForProduct(amount);// Effectue le paiement après approbation\n}catch(error){console.error(\"Erreur lors de l'approbation du token\",error);alert(\"Échec de l'approbation du token.\");}};// Fonction pour le paiement\nconst handlePayment=async()=>{if(!walletConnected){alert(\"Veuillez connecter votre wallet avant de procéder.\");return;}if(productId&&productPrice){let amountIn=0;try{if(selectedCurrency==='USD'){amountIn=productPrice;}else if(selectedCurrency==='BNB'){if(!bnbToUsdRate){alert(\"Le taux de conversion BNB vers USD est en cours de chargement.\");return;}amountIn=productPrice/bnbToUsdRate;}else{alert(\"Devise non supportée pour ce paiement.\");return;}amountIn=parseFloat(amountIn).toFixed(18);// Conversion en format compatible Ethereum\nconsole.log('Montant pour la transaction:',amountIn);// Vérification de l'allowance et approbation si nécessaire\nawait checkAllowance(ethers.utils.parseUnits(amountIn.toString(),selectedCurrency==='USDT'?6:18));// Effectue le paiement une fois l'allowance confirmée\nconsole.log(\"Paiement prêt à être effectué.\");await payForProduct(amountIn);console.log(\"Transaction envoyée.\");}catch(error){console.error(\"Erreur lors du calcul du montant:\",error.message);alert(\"Une erreur s'est produite. Veuillez vérifier vos paramètres.\");}}else{alert(\"Veuillez sélectionner un produit valide.\");}};// Mise à jour des informations du produit\nconst updateProductInfo=selectedProductId=>{setProductId(selectedProductId);if(!selectedProductId){console.error(\"Aucun produit sélectionné.\");return;}const productDetails=products[selectedProductId];if(productDetails){const{price,exists}=productDetails;setProductPrice(price);setProductInfo({price,exists});if(selectedCurrency==='USD'){setConvertedPrice(price?price.toString():null);}else if(selectedCurrency==='BNB'){setConvertedPrice(price?(price/bnbToUsdRate).toString():null);}}else{console.error(\"Produit non trouvé !\");}};// Gestion du changement de devise\nconst handleCurrencyChange=event=>{const newCurrency=event.target.value;setSelectedCurrency(newCurrency);if(newCurrency==='USD'){setConvertedPrice(productPrice?productPrice.toString():null);}else if(newCurrency==='BNB'){setConvertedPrice(productPrice?(productPrice/bnbToUsdRate).toString():null);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Test de Paiement Multi-Produits avec Blockchain\"}),/*#__PURE__*/_jsx(\"button\",{onClick:connectWallet,children:walletConnected?`Wallet connecté : ${walletAddress}`:'Connecter le wallet'}),productId&&productInfo&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Produit choisi : \",productId]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Prix du produit : \",convertedPrice?convertedPrice:'Chargement...',\" \",selectedCurrency]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Le produit est \",productInfo.exists?'disponible':'indisponible']})]}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>updateProductInfo(e.target.value),value:productId,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"S\\xE9lectionnez un produit\"}),/*#__PURE__*/_jsx(\"option\",{value:\"product1\",children:\"Produit 1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"product2\",children:\"Produit 2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"product3\",children:\"Produit 3\"})]}),/*#__PURE__*/_jsxs(\"select\",{onChange:handleCurrencyChange,value:selectedCurrency,children:[/*#__PURE__*/_jsx(\"option\",{value:\"USD\",children:\"USD\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BNB\",children:\"BNB\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePayment,children:\"Payer pour le produit\"})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","useRef","Web3Modal","ethers","axios","WalletConnectProvider","process","jsx","_jsx","jsxs","_jsxs","usdtAddress","usdtABI","contractAddress","bscTestnetRpcUrl","bscTestnetProvider","providers","JsonRpcProvider","App","web3Modal","setWeb3Modal","provider","setProvider","walletConnected","setWalletConnected","walletAddress","setWalletAddress","productInfo","setProductInfo","selectedProductId","setSelectedProductId","productId","setProductId","productPrice","setProductPrice","bnbToUsdRate","setBnbToUsdRate","selectedCurrency","setSelectedCurrency","convertedPrice","setConvertedPrice","contractInstance","setContractInstance","products","product1","price","exists","title","product2","product3","modal","cacheProvider","providerOptions","walletconnect","package","options","infuraId","metamask","trustwallet","interval","setInterval","web3ModalElement","document","querySelector","style","zIndex","clearInterval","hideIframe","iframe","display","reconnectToMetaMask","window","ethereum","alert","request","method","params","eth_accounts","setTimeout","accounts","Web3Provider","signer","getSigner","address","getAddress","error","console","connectWallet","log","instance","connect","newProvider","clearCachedProvider","retryError","fetchBnbToUsdRate","response","get","data","binancecoin","usd","loadBlockchainData","contractABI","contract","Contract","productDetails","payForProduct","amountIn","Error","priceInWei","utils","parseUnits","toString","tx","buyProduct","value","receipt","wait","loading","setLoading","transactionInProgress","setTransactionInProgress","approveUSDT","amountToSend","usdtContract","allowance","lt","approve","status","checkAllowance","amount","tokenContract","approveToken","hash","handlePayment","parseFloat","toFixed","message","updateProductInfo","handleCurrencyChange","event","newCurrency","target","className","children","onClick","onChange","e"],"sources":["/home/nypsus/mon-projet-deploiement/Front-end-indicateur/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport Web3Modal from 'web3modal';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport process from 'process';\nimport './App.css'; // Importation du fichier CSS\nimport './index.css'; // Ajoute cette ligne dans ton fichier JavaScript\n\n\n// Adresse du contrat USDT sur BSC (assure-toi que c'est l'adresse correcte pour le réseau que tu utilises)\nconst usdtAddress = '0x55d398326f99059fF775485246999027B3197955'; // Adresse du contrat USDT sur Binance Smart Chain\n\n// ABI pour le contrat USDT\nconst usdtABI = [\n  \"function balanceOf(address) view returns (uint256)\",\n  \"function allowance(address, address) view returns (uint256)\",\n  \"function approve(address spender, uint256 amount) public returns (bool)\",\n  \"function transferFrom(address sender, address recipient, uint256 amount) public returns (bool)\"\n];\n\n\n\n\nconst contractAddress = '0xCd25eee89Bb01603f0E0cf8D8C243966a926761d';\nconst bscTestnetRpcUrl = \"https://bsc-dataseed.binance.org/\"; // BSC Mainnet\nconst bscTestnetProvider = new ethers.providers.JsonRpcProvider(bscTestnetRpcUrl);\n\n\n\n\nfunction App() {\n  const [web3Modal, setWeb3Modal] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [walletConnected, setWalletConnected] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n\n  const [productInfo, setProductInfo] = useState(null);\n  const [selectedProductId, setSelectedProductId] = useState(null); // ou un ID de produit par défaut\n\n  const [productId, setProductId] = useState('');\n  const [productPrice, setProductPrice] = useState(null);\n  const [bnbToUsdRate, setBnbToUsdRate] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n  const [convertedPrice, setConvertedPrice] = useState(null);\n  const [contractInstance, setContractInstance] = useState(null); // Déclarez `contractInstance` ici\n  const products = {\n    product1: { price: 5, exists: true, title: \"Indicateur Daily\" },\n    product2: { price: 295, exists: true, title: \"Indicateur 4h/1h\" },\n    product3: { price: 495, exists: true, title: \"Indicateur 15mn\" }\n  };\n  \n\n\n\n\n\n\n  \n  // Initialisation de Web3Modal pour la connexion aux portefeuilles\n  useEffect(() => {\n  const modal = new Web3Modal({\n    cacheProvider: true, // Gardera en cache la dernière connexion\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider, // Utilisation de WalletConnectProvider\n        options: {\n          infuraId: \"e759bc5af90042a1b66c5a01aae905af\" // Remplace avec ton propre infura ID\n        }\n      },\n      metamask: {\n        package: null, // MetaMask ne nécessite pas de package\n        \n      },\n      trustwallet: {\n        package: WalletConnectProvider, // Utilisation de WalletConnectProvider pour Trust Wallet\n        options: {\n          infuraId: \"pDtEhrK4AAiPfirK7qsQI25NJlgrtMu1bBcFDqV4J95GTCAR2d/8Lg\" // Remplace avec ton propre infura ID\n        }\n      },\n      \n      // Ajoute d'autres options de portefeuille ici si nécessaire (par exemple : Fortmatic, etc.)\n    }\n  });\n\n  setWeb3Modal(modal);\n\n  // Vérifie si la modale est présente dans le DOM\n  const interval = setInterval(() => {\n    const web3ModalElement = document.querySelector('.web3-modal-container');\n    if (web3ModalElement) {\n      web3ModalElement.style.zIndex = '999999'; // Modale au-dessus de tout\n      clearInterval(interval);\n    }\n  }, 100);\n\n  return () => clearInterval(interval);\n\n}, []);\n\n  \n\n\n  // Masquer l'iframe si elle est présente\n  const hideIframe = () => {\n    const iframe = document.querySelector('iframe');\n    if (iframe) {\n      iframe.style.display = 'none'; // ou iframe.remove() si tu préfères\n    }\n  };\n\n  // Appel de la fonction pour masquer l'iframe au moment où Web3Modal est chargé\n  hideIframe();\n  \n\n  // Fonction pour reconnecter MetaMask\n  const reconnectToMetaMask = async () => {\n    if (typeof window.ethereum === \"undefined\") {\n      alert(\"MetaMask n'est pas installé !\");\n      return;\n    }\n\n    try {\n      \n      await window.ethereum.request({\n        method: 'wallet_requestPermissions',\n        params: [{\n          eth_accounts: {}\n        }]\n      });\n\n      setTimeout(async () => {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n\n        setWalletAddress(address);\n        setWalletConnected(true);\n        alert(`Compte connecté : ${address}`);\n      }, 1000);\n    } catch (error) {\n      console.error('Erreur de connexion à MetaMask :', error);\n      alert('Échec de la connexion à MetaMask.');\n    }\n  };\n\n\n  // Connexion au wallet via Web3Modal\n  const connectWallet = async () => {\n    if (!web3Modal) {\n      console.error(\"Web3Modal non initialisé\");\n      return;\n    }\n    \n    try {\n      console.log(\"Tentative de connexion au wallet...\");\n      \n      \n      // Connexion via Web3Modal\n      const instance = await web3Modal.connect();\n      const newProvider = new ethers.providers.Web3Provider(instance);\n      \n      // S'assurer que le provider est correctement défini\n      if (!newProvider) {\n        console.error(\"Le fournisseur Web3 n'a pas été correctement créé\");\n        return;\n      }\n      \n      setProvider(newProvider);\n  \n      // Récupérer l'adresse du wallet\n      const signer = newProvider.getSigner();\n      const address = await signer.getAddress();\n      \n      setWalletAddress(address);\n      setWalletConnected(true);\n      \n      console.log(`Wallet connecté: ${address}`);\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion au portefeuille:\", error);\n      alert(\"Erreur de connexion au portefeuille. Veuillez connecter votre wallet.\");\n      // Ferme Web3Modal\n      web3Modal.clearCachedProvider();\n\n      // Relance le processus de reconnexion via MetaMask\n      try {\n        if (typeof window.ethereum !== \"undefined\") {\n          await reconnectToMetaMask();\n        } else {\n          alert(\"MetaMask n'est pas installé.\");\n        }\n      } catch (retryError) {\n        console.error(\"Échec de la reconnexion à MetaMask\", retryError);\n        alert(\"La reconnexion à MetaMask a échoué.\");\n      }\n    }\n  };\n  \n\n  // Récupération du taux de conversion BNB vers USD\n  const fetchBnbToUsdRate = async () => {\n    try {\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=binancecoin&vs_currencies=usd');\n      setBnbToUsdRate(response.data.binancecoin.usd);\n    } catch (error) {\n      console.error('Erreur lors de la récupération du taux BNB -> USD', error);\n    }\n  };\n\n   // Charger les données du contrat et les informations du produit\nuseEffect(() => {\n  const loadBlockchainData = async () => {\n    if (provider) {\n      // Adresse du contrat et ABI\n      const contractAddress = '0xCd25eee89Bb01603f0E0cf8D8C243966a926761d';\n      const contractABI = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"token\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"addAllowedToken\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"token\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"productId\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"pay\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"token\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"removeAllowedToken\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"tokens\",\n        \"type\": \"address[]\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"user\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"token\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"productId\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"PaymentReceived\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"productId\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"removeProduct\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"productId\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"price\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setProductPrice\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"token\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"withdrawToken\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowedTokens\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"token\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isTokenAllowed\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"products\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"price\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"exists\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n\n    \n  }\n];\n\n\n\n\n        // Crée une nouvelle instance du contrat avec le provider\n      const contract = new ethers.Contract(contractAddress, contractABI, provider.getSigner());\n\n      // Appel direct à la méthode du contrat, sans attendre que contractInstance soit mis à jour\n      try {\n        const productDetails = await contract.products(\"product1\");\n        setProductInfo(productDetails);\n        setProductPrice(productDetails.price);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des informations du produit:\", error);\n      }\n      \n      // Stocke cette instance dans l'état\n      setContractInstance(contract);\n    }\n  };\n\n  loadBlockchainData();\n  fetchBnbToUsdRate();\n}, [provider]);  // Dépendance sur 'provider' uniquement, pas besoin de contractInstance ici\n\n\n\n\n\n\n\nconst payForProduct = async (amountIn) => {\n    try {\n      if (!selectedProductId) {\n        throw new Error(\"Aucun produit sélectionné.\");\n      }\n  \n      // Récupérer les détails du produit sélectionné\n      const productDetails = products[selectedProductId];\n      if (!productDetails || !productDetails.exists || productDetails.price <= 0) {\n        throw new Error(\"Produit invalide ou prix incorrect.\");\n      }\n  \n      console.log(\"Détails du produit sélectionné:\", productDetails);\n      \n      // Convertir le prix du produit en unités appropriées (wei pour Ethereum)\n      const priceInWei = ethers.utils.parseUnits(amountIn.toString(), selectedCurrency === 'USDT' ? 6 : 18); // Conversion du montant en fonction de la devise\n  \n      // Appel au contrat pour effectuer l'achat\n      const tx = await contractInstance.buyProduct(\n        selectedProductId,   // Identifiant du produit\n        priceInWei,          // Montant à envoyer (en fonction de la devise)\n        { value: selectedCurrency === 'BNB' ? priceInWei : 0 } // Si c'est BNB, l'envoyer dans le champ 'value'\n      );\n  \n      // Attendre que la transaction soit minée (confirmée)\n      const receipt = await tx.wait();\n      console.log(\"Transaction réussie:\", receipt);\n  \n      alert(\"Paiement effectué avec succès !\");\n    } catch (error) {\n      console.error(\"Erreur lors du paiement:\", error);\n      alert(\"Une erreur s'est produite lors du paiement. Veuillez réessayer.\");\n    }\n  };\n  \n  \n  \n  \n\n\n\n\n  const [loading, setLoading] = useState(false); // Ajout de l'état loading\n  const [transactionInProgress, setTransactionInProgress] = useState(false);\n\n  \n  \n  // Fonction pour approuver USDT\n  const approveUSDT = async (amountToSend) => {\n    const signer = new ethers.providers.Web3Provider(window.ethereum).getSigner();\n    const usdtContract = new ethers.Contract(usdtAddress, usdtABI, signer);\n  \n    try {\n      const allowance = await usdtContract.allowance(await signer.getAddress(), contractAddress);\n      console.log(\"Allowance actuelle:\", allowance.toString());\n  \n      if (allowance.lt(amountToSend)) {\n        console.log(\"Allowance insuffisante, approbation en cours...\");\n        const tx = await usdtContract.approve(contractAddress, amountToSend);\n        const receipt = await tx.wait();\n  \n        if (receipt.status === 1) {\n          console.log(\"Allowance mise à jour !\");\n        } else {\n          console.error(\"L'approbation de l'allowance a échoué.\");\n          throw new Error(\"Échec de l'approbation de l'allowance.\");\n        }\n      } else {\n        console.log(\"Allowance suffisante.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de l'approbation de l'allowance USDT :\", error);\n    }\n  };\n  \n  // Vérification de l'allowance\n  const checkAllowance = async (amount) => {\n    try {\n      // Assure-toi de récupérer l'instance du token, par exemple USDT\n      const tokenContract = new ethers.Contract(usdtAddress, usdtABI, provider.getSigner());\n      const allowance = await tokenContract.allowance(walletAddress, contractInstance.address);\n  \n      if (allowance.lt(amount)) {\n        // Si l'allowance est insuffisante, demander une approbation\n        console.log(\"Allowance insuffisante, demande d'approbation...\");\n        await approveToken(amount);\n      } else {\n        console.log(\"Allowance suffisante\");\n        // Proceed with the payment if allowance is sufficient\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la vérification de l'allowance\", error);\n    }\n  };\n  \n\n  const approveToken = async (amount) => {\n    try {\n      const tokenContract = new ethers.Contract(usdtAddress, usdtABI, provider.getSigner());\n      console.log(\"Demande d'approbation pour un montant de:\", amount.toString());\n  \n      const tx = await tokenContract.approve(contractInstance.address, amount);\n      console.log(\"Transaction d'approbation envoyée:\", tx.hash);\n  \n      // Attendre que la transaction soit confirmée\n      const receipt = await tx.wait();\n      if (receipt.status === 1) {\n        console.log(\"Approvisionnement effectué avec succès !\");\n      } else {\n        console.error(\"La transaction d'approbation a échoué.\");\n      }\n  \n      // Une fois l'approbation effectuée, appeler la fonction de paiement\n      await payForProduct(amount);  // Effectue le paiement après approbation\n    } catch (error) {\n      console.error(\"Erreur lors de l'approbation du token\", error);\n      alert(\"Échec de l'approbation du token.\");\n    }\n  };\n  \n  \n  \n  // Fonction pour le paiement\n  const handlePayment = async () => {\n    if (!walletConnected) {\n      alert(\"Veuillez connecter votre wallet avant de procéder.\");\n      return;\n    }\n  \n    if (productId && productPrice) {\n      let amountIn = 0;\n      try {\n        if (selectedCurrency === 'USD') {\n          amountIn = productPrice;\n        } else if (selectedCurrency === 'BNB') {\n          if (!bnbToUsdRate) {\n            alert(\"Le taux de conversion BNB vers USD est en cours de chargement.\");\n            return;\n          }\n          amountIn = productPrice / bnbToUsdRate;\n        } else {\n          alert(\"Devise non supportée pour ce paiement.\");\n          return;\n        }\n  \n        amountIn = parseFloat(amountIn).toFixed(18); // Conversion en format compatible Ethereum\n        console.log('Montant pour la transaction:', amountIn);\n  \n        // Vérification de l'allowance et approbation si nécessaire\n        await checkAllowance(ethers.utils.parseUnits(amountIn.toString(), selectedCurrency === 'USDT' ? 6 : 18));\n  \n        // Effectue le paiement une fois l'allowance confirmée\n        console.log(\"Paiement prêt à être effectué.\");\n        await payForProduct(amountIn);\n  \n        console.log(\"Transaction envoyée.\");\n      } catch (error) {\n        console.error(\"Erreur lors du calcul du montant:\", error.message);\n        alert(\"Une erreur s'est produite. Veuillez vérifier vos paramètres.\");\n      }\n    } else {\n      alert(\"Veuillez sélectionner un produit valide.\");\n    }\n  };\n  \n  \n  // Mise à jour des informations du produit\n  const updateProductInfo = (selectedProductId) => {\n    setProductId(selectedProductId);\n  \n    if (!selectedProductId) {\n      console.error(\"Aucun produit sélectionné.\");\n      return;\n    }\n  \n    const productDetails = products[selectedProductId];\n  \n    if (productDetails) {\n      const { price, exists } = productDetails;\n      setProductPrice(price);\n      setProductInfo({ price, exists });\n  \n      if (selectedCurrency === 'USD') {\n        setConvertedPrice(price ? price.toString() : null);\n      } else if (selectedCurrency === 'BNB') {\n        setConvertedPrice(price ? (price / bnbToUsdRate).toString() : null);\n      }\n    } else {\n      console.error(\"Produit non trouvé !\");\n    }\n  };\n  \n  \n  // Gestion du changement de devise\n  const handleCurrencyChange = (event) => {\n    const newCurrency = event.target.value;\n    setSelectedCurrency(newCurrency);\n  \n    if (newCurrency === 'USD') {\n      setConvertedPrice(productPrice ? productPrice.toString() : null);\n    } else if (newCurrency === 'BNB') {\n      setConvertedPrice(productPrice ? (productPrice / bnbToUsdRate).toString() : null);\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n      <h1>Test de Paiement Multi-Produits avec Blockchain</h1>\n      <button onClick={connectWallet}>\n        {walletConnected ? `Wallet connecté : ${walletAddress}` : 'Connecter le wallet'}\n      </button>\n  \n      {productId && productInfo && (\n        <div>\n          <p>Produit choisi : {productId}</p>\n          <p>Prix du produit : {convertedPrice ? convertedPrice : 'Chargement...'} {selectedCurrency}</p>\n          <p>Le produit est {productInfo.exists ? 'disponible' : 'indisponible'}</p>\n        </div>\n      )}\n  \n      <select onChange={(e) => updateProductInfo(e.target.value)} value={productId}>\n        <option value=\"\">Sélectionnez un produit</option>\n        <option value=\"product1\">Produit 1</option>\n        <option value=\"product2\">Produit 2</option>\n        <option value=\"product3\">Produit 3</option>\n      </select>\n  \n      <select onChange={handleCurrencyChange} value={selectedCurrency}>\n        <option value=\"USD\">USD</option>\n        <option value=\"BNB\">BNB</option>\n      </select>\n  \n      <button onClick={handlePayment}>Payer pour le produit</button>\n    </div>\n  );\n  };\n  \n  export default App;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}